# -*- coding: utf-8 -*-
from PyQt5 import QtCore, QtGui, QtWidgets
from keras.preprocessing import sequence
from keras.models import Sequential
from keras.layers import Dense, Activation, Embedding
from keras.layers import LSTM, SpatialDropout1D
from keras.models import model_from_json
from pymystem3 import Mystem
import os
import numpy as np
import sys
import re
from keras.preprocessing.text import Tokenizer
from keras.preprocessing.sequence import pad_sequences

import vk
session = vk.Session()
vk_api = vk.API(session)

import tweepy
auth = tweepy.OAuthHandler('DkNRJdzhUnThKJ7G5C9IftdUp', 'C14fr0ews91xJI8AH1I3BNhZrZ2gdlyz9KqnXFPQOnmZqJUmc7')
auth.set_access_token('866132837082296320-GRx4gxwbRVffxwXgMhjZhXbxgn4RaM0', 'rhtMycE2gFiJchJVIJtlEIf7qgkvqtCbmue9rPDoXEpkt')
api = tweepy.API(auth)

diagtext = []
diagbutton = ['','','','','','','','']
tokenizer = Tokenizer()
Neural=0
Vklist = np.ndarray((100,15),np.float)
VkVisible = []
Twitterlist = np.ndarray((100,15),np.float)
TwitterVisible = []
# Максимальное количество слов (по частоте использования)
max_features = 15000
# Максимальная длина текста в словах
maxlen = 300
slider = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

def tokenizer_update():
    global tokenizer
    dir_work = os.listdir('./dataset/stem')
    Stemdata = np.ndarray((int(len(dir_work)),), np.object)
    for i in range(0,len(dir_work)):
        file = open('dataset/stem/'+str(dir_work[i]), 'r')
        Stemdata[i] = str(file.read())[16:]
        file.close()
    tokenizer.fit_on_texts(Stemdata)
tokenizer_update()

# Создаем сеть
model = Sequential()
# Слой для векторного представления слов
model.add(Embedding(max_features, 32))
model.add(SpatialDropout1D(0.2))
# Слой долго-краткосрочной памяти
model.add(LSTM(100, dropout=0.2, recurrent_dropout=0.2))
# Полносвязный слой
model.add(Dense(1, activation="sigmoid"))



def Slider(t):
    for i in range (0, 15):
        slider[i]=t[i]

def lmrDecrypt(i):
    if i=='l':
        i = -1
    elif i=='r':
        i = 1
    else:
        i = 0
    return int(i)

def lmrCrypt(i):
    if i<0:
        i = 'l'
    elif i==0:
        i = 'm'
    else:
        i = 'r'
    return str(i)

# Функция конвертации текста в стемминг вид
def stemconvtext(text):
    return(''.join(Mystem().lemmatize(text)))

#Функция конвертации файла по адресу в стемминг вид
def stemconv(convfile):
    f = open(convfile, 'r')
    stemfile = open('dataset/stem/'+convfile[15:-4]+'.stem', 'w')
    stemfile.write(stemconvtext(f.read()))
    f.close()
    stemfile.close()
    return()

def savenet():
    global Neural
    global model
    model_json = model.to_json()
    json_file = open("./dataset/Neural"+str(Neural)+".json", "w")
    # Записываем архитектуру сети в файл
    json_file.write(model_json)
    json_file.close()
    # Записываем данные о весах в файл
    model.save_weights("./dataset/Neural"+str(Neural)+".h5")
    return()

#Суть здесь
def predict(pred):
    x=model.predict(pred)
    return(x)

class Ui_MainWindow(object):

    def textBlackSens(self):
        global diagtext
        global diagbutton
        self.textEdit.clear()
        info = diagbutton[0].split()
        for i in range(0,len(info)):
            if info[i]=='1':
                self.textEdit.insertHtml('<b>'+diagtext[i]+'</b> ')
            else:
                self.textEdit.insertHtml(''+diagtext[i]+' ')

    def textWhiteSens(self):
        global diagtext
        global diagbutton
        self.textEdit.clear()
        info = diagbutton[1].split()
        for i in range(0,len(info)):
            if info[i]=='1':
                self.textEdit.insertHtml('<b>'+diagtext[i]+'</b> ')
            else:
                self.textEdit.insertHtml(''+diagtext[i]+' ')

    def textBlackInt(self):
        global diagtext
        global diagbutton
        self.textEdit.clear()
        info = diagbutton[2].split()
        for i in range(0,len(info)):
            if info[i]=='1':
                self.textEdit.insertHtml('<b>'+diagtext[i]+'</b> ')
            else:
                self.textEdit.insertHtml(''+diagtext[i]+' ')

    def textWhiteInt(self):
        global diagtext
        global diagbutton
        self.textEdit.clear()
        info = diagbutton[3].split()
        for i in range(0,len(info)):
            if info[i]=='1':
                self.textEdit.insertHtml('<b>'+diagtext[i]+'</b> ')
            else:
                self.textEdit.insertHtml(''+diagtext[i]+' ')

    def textBlackLogic(self):
        global diagtext
        global diagbutton
        self.textEdit.clear()
        info = diagbutton[4].split()
        for i in range(0,len(info)):
            if info[i]=='1':
                self.textEdit.insertHtml('<b>'+diagtext[i]+'</b> ')
            else:
                self.textEdit.insertHtml(''+diagtext[i]+' ')

    def textWhiteLogic(self):
        global diagtext
        global diagbutton
        self.textEdit.clear()
        info = diagbutton[5].split()
        for i in range(0,len(info)):
            if info[i]=='1':
                self.textEdit.insertHtml('<b>'+diagtext[i]+'</b> ')
            else:
                self.textEdit.insertHtml(''+diagtext[i]+' ')

    def textBlackEthic(self):
        global diagtext
        global diagbutton
        self.textEdit.clear()
        info = diagbutton[6].split()
        for i in range(0,len(info)):
            if info[i]=='1':
                self.textEdit.insertHtml('<b>'+diagtext[i]+'</b> ')
            else:
                self.textEdit.insertHtml(''+diagtext[i]+' ')

    def textWhiteEthic(self):
        global diagtext
        global diagbutton
        self.textEdit.clear()
        info = diagbutton[7].split()
        for i in range(0,len(info)):
            if info[i]=='1':
                self.textEdit.insertHtml('<b>'+diagtext[i]+'</b> ')
            else:
                self.textEdit.insertHtml(''+diagtext[i]+' ')


    def diagtext(self):
        global Neural
        global diagtext
        global diagbutton
        global slider
        self.progressBarText.setValue(0)
        diagtext = self.textEdit.toPlainText().split()
        stemmed = stemconvtext(self.textEdit.toPlainText())
        diagstemtext = stemmed.split()
        for i in range(0,len(diagstemtext)):
            diagstemtext[i] = re.compile("([а-яА-Яa-zA-Z-']+)").findall(diagstemtext[i])
        diagbutton = ['','','','','','','','']
        unique = ['', '', '', '', '', '', '', '']
        self.progressBarText.setValue(10)
        for i in range(0,len(diagstemtext)):
            with open('dataset/blacksens.stem') as f:
                result = '0 '
                flag = 1
                l = 0
                for line in f:
                    if diagstemtext[i] == line.split():
                        for j in range(0,len(unique[0].split())):
                            if unique[0].split()[j]==line.split()[0]:
                                flag = 0
                        if flag == 1:
                            unique[0]+= line + ' '
                        result = '1 '
                        self.textBrowserNeuralConsole.insertPlainText('ЧС ['+str(i)+']; Номер в словаре:'+str(l)+'; Сл: '+str(diagtext[i])+'; stem: '+str(diagstemtext[i])+'; line: '+str(line.split())+'\n')
                        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
                        break
                    l += 1
                diagbutton[0] += result
            self.progressBarText.setValue(12)
            with open('dataset/whitesens.stem') as f:
                result = '0 '
                flag = 1
                l = 0
                for line in f:
                    if diagstemtext[i] == line.split():
                        for j in range(0, len(unique[1].split())):
                            if unique[1].split()[j] == line.split()[0]:
                                flag = 0
                        if flag == 1:
                            unique[1] += line + ' '
                        result = '1 '
                        self.textBrowserNeuralConsole.insertPlainText('БС [' + str(i) + ']; Номер в словаре:'+str(l)+'; Сл: ' + str(diagtext[i]) + '; stem: ' + str(
                            diagstemtext[i]) + '; line: ' + str(line.split())+'\n')
                        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
                        break
                    l += 1
                diagbutton[1] += result
            self.progressBarText.setValue(15)
            with open('dataset/blackint.stem') as f:
                result = '0 '
                flag = 1
                l = 0
                for line in f:
                    if diagstemtext[i] == line.split():
                        for j in range(0, len(unique[2].split())):
                            if unique[2].split()[j] == line.split()[0]:
                                flag = 0
                        if flag == 1:
                            unique[2] += line + ' '
                        result = '1 '
                        self.textBrowserNeuralConsole.insertPlainText('ЧИ [' + str(i) + ']; Номер в словаре:'+str(l)+'; Сл: ' + str(diagtext[i]) + '; stem: ' + str(
                            diagstemtext[i]) + '; line: ' + str(line.split())+'\n')
                        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
                        break
                    l += 1
                diagbutton[2] += result
            self.progressBarText.setValue(17)
            with open('dataset/whiteint.stem') as f:
                result = '0 '
                flag = 1
                l = 0
                for line in f:
                    if diagstemtext[i] == line.split():
                        for j in range(0, len(unique[3].split())):
                            if unique[3].split()[j] == line.split()[0]:
                                flag = 0
                        if flag == 1:
                            unique[3] += line + ' '
                        result = '1 '
                        self.textBrowserNeuralConsole.insertPlainText('БИ [' + str(i) + ']; Номер в словаре:'+str(l)+'; Сл: ' + str(diagtext[i]) + '; stem: ' + str(
                            diagstemtext[i]) + '; line: ' + str(line.split())+'\n')
                        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
                        break
                    l += 1
                diagbutton[3] += result
            self.progressBarText.setValue(20)
            with open('dataset/blacklogic.stem') as f:
                result = '0 '
                flag = 1
                l = 0
                for line in f:
                    if diagstemtext[i] == line.split():
                        for j in range(0, len(unique[4].split())):
                            if unique[4].split()[j] == line.split()[0]:
                                flag = 0
                        if flag == 1:
                            unique[4] += line + ' '
                        result = '1 '
                        self.textBrowserNeuralConsole.insertPlainText('ЧЛ [' + str(i) + ']; Номер в словаре:'+str(l)+'; Сл: ' + str(diagtext[i]) + '; stem: ' + str(
                            diagstemtext[i]) + '; line: ' + str(line.split())+'\n')
                        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
                        break
                    l += 1
                diagbutton[4] += result
            self.progressBarText.setValue(22)
            with open('dataset/whitelogic.stem') as f:
                result = '0 '
                flag = 1
                l = 0
                for line in f:
                    if diagstemtext[i] == line.split():
                        for j in range(0, len(unique[5].split())):
                            if unique[5].split()[j] == line.split()[0]:
                                flag = 0
                        if flag == 1:
                            unique[5] += line + ' '
                        result = '1 '
                        self.textBrowserNeuralConsole.insertPlainText('БЛ [' + str(i) + ']; Номер в словаре:'+str(l)+'; Сл: ' + str(diagtext[i]) + '; stem: ' + str(
                            diagstemtext[i]) + '; line: ' + str(line.split())+'\n')
                        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
                        break
                    l += 1
                diagbutton[5] += result
            self.progressBarText.setValue(25)
            with open('dataset/blackethic.stem') as f:
                result = '0 '
                flag = 1
                l = 0
                for line in f:
                    if diagstemtext[i] == line.split():
                        for j in range(0, len(unique[6].split())):
                            if unique[6].split()[j] == line.split()[0]:
                                flag = 0
                        if flag == 1:
                            unique[6] += line + ' '
                        result = '1 '
                        self.textBrowserNeuralConsole.insertPlainText('ЧЭ [' + str(i) + ']; Номер в словаре:'+str(l)+'; Сл: ' + str(diagtext[i]) + '; stem: ' + str(
                            diagstemtext[i]) + '; line: ' + str(line.split())+'\n')
                        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
                        break
                    l += 1
                diagbutton[6] += result
            self.progressBarText.setValue(27)
            with open('dataset/whiteethic.stem') as f:
                result = '0 '
                flag = 1
                l = 0
                for line in f:
                    if diagstemtext[i] == line.split():
                        for j in range(0, len(unique[7].split())):
                            if unique[7].split()[j] == line.split()[0]:
                                flag = 0
                        if flag == 1:
                            unique[7] += line + ' '
                        result = '1 '
                        self.textBrowserNeuralConsole.insertPlainText('БЭ [' + str(i) + ']; Номер в словаре:'+str(l)+'; Сл: ' + str(diagtext[i]) + '; stem: ' + str(
                            diagstemtext[i]) + '; line: ' + str(line.split())+'\n')
                        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
                        break
                    l += 1
                diagbutton[7] += result
            self.progressBarText.setValue(30)
        self.labelTextBlackSensCounter.setText(str(sum(list(map(int, diagbutton[0].split())))))
        self.labelTextWhiteSensCounter.setText(str(sum(list(map(int, diagbutton[1].split())))))
        self.labelTextBlackIntuitCounter.setText(str(sum(list(map(int, diagbutton[2].split())))))
        self.labelTextWhiteIntuitCounter.setText(str(sum(list(map(int, diagbutton[3].split())))))
        self.labelTextBlackLogicCounter.setText(str(sum(list(map(int, diagbutton[4].split())))))
        self.labelTextWhiteLogicCounter.setText(str(sum(list(map(int, diagbutton[5].split())))))
        self.labelTextBlackEthicCounter.setText(str(sum(list(map(int, diagbutton[6].split())))))
        self.labelTextWhiteEthicCounter.setText(str(sum(list(map(int, diagbutton[7].split())))))
        self.labelTextBlackSensUnique.setText(str(len(unique[0].split())))
        self.labelTextWhiteSensUnique.setText(str(len(unique[1].split())))
        self.labelTextBlackIntuitUnique.setText(str(len(unique[2].split())))
        self.labelTextWhiteIntuitUnique.setText(str(len(unique[3].split())))
        self.labelTextBlackLogicUnique.setText(str(len(unique[4].split())))
        self.labelTextWhiteLogicUnique.setText(str(len(unique[5].split())))
        self.labelTextBlackEthicUnique.setText(str(len(unique[6].split())))
        self.labelTextWhiteEthicUnique.setText(str(len(unique[7].split())))
        text = tokenizer.texts_to_sequences([stemmed])
        self.progressBarText.setValue(33)
        text = sequence.pad_sequences(text, maxlen=maxlen)
        for i in range(0,15):
            Neural = i
            self.loadnet()
            result = model.predict(text)
            result = result[0]
            if result<=0.15:
                slider[i] = -3
            elif result>0.15 and result<=0.31:
                slider[i] = -2
            elif result>0.31 and result<=0.47:
                slider[i] = -1
            elif result>0.47 and result<=0.53:
                slider[i] = 0
            elif result>0.53 and result<=0.69:
                slider[i] = 1
            elif result>0.69 and result<=0.85:
                slider[i] = 2
            elif result>0.85:
                slider[i] = 3
                self.progressBarText.setValue(int(((i+1) / 15) * 67)+33)
            #print('result['+str(i)+'] = '+str(result))
        self.MoveTextSliders()
        Neural = 0
        for j in range(0,15):
           slider[j] = 0
        self.progressBarText.setValue(0)


    def teach(self):
        global Neural
        global model
        self.textBrowserNeuralConsole.insertPlainText('(Обучение) Обучаю сеть ('+str(Neural)+')...\n')
        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
        self.progressBarNeural.setValue(0)
        print('(Обучение) Обучаю сеть ('+str(Neural)+')...\n')
        np.random.seed(42)
        (X_train, y_train), (X_test, y_test) = self.loaddata()
        X_train = sequence.pad_sequences(X_train, maxlen=maxlen)
        X_test = sequence.pad_sequences(X_test, maxlen=maxlen)
        model.compile(loss='binary_crossentropy',
                      optimizer='adam',
                      metrics=['accuracy'])
        ep = 0
        max = 0
        if len(X_train) != 0:
            while 1:
                ep+=1
                savenet()
                model.fit(X_train, y_train, batch_size=8, epochs=ep,
                          validation_data=(X_test, y_test), verbose=2, initial_epoch=ep-1)
                scores = model.evaluate(X_test, y_test,
                                        batch_size=8)
                self.textBrowserNeuralConsole.insertPlainText("Точность "+str(ep)+" эпохи на тестовых данных: %.2f%%\n" % (scores[1] * 100))
                self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
                print("Точность на тестовых данных: %.2f%%" % (scores[1] * 100))
                if max<=scores[1] and max<1 and ep<100:
                    max=scores[1]
                    self.progressBarNeural.setValue(int(ep))
                else:
                    self.progressBarNeural.setValue(0)
                    self.textBrowserNeuralConsole.insertPlainText(
                        "Точность снижена, найден порог переобучения, откат обратно на результат предыдущей эпохи\n")
                    self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
                    break

    def loaddata(self):
        global Neural
        global model
        workfiles = []
        dir_work = os.listdir('./dataset/stem')
        for i in range(0,len(dir_work)):
            file = open('dataset/stem/'+str(dir_work[i]), 'r')
            txt = str(file.read())
            convert = txt[:15]
            if convert[Neural] != 'm':
                workfiles.append(dir_work[i])
        print(workfiles)
        max = len(workfiles)
        test = int(max /5*4)
        self.textBrowserNeuralConsole.insertPlainText(
            "Размер обучающей выборки: "+str(test)+"; Размер тестовой выборки: "+str(max-test)+";\n")
        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
        Xalldata = np.ndarray((int(max),), np.object)
        Yalldata = np.ndarray((int(max),), np.object)
        Xtr = np.ndarray((int(test),), np.object)
        Ytr = np.ndarray((int(test),), np.object)
        Xtt = np.ndarray((int(max - test),), np.object)
        Ytt = np.ndarray((int(max - test),), np.object)
        traincount = 0
        testcount = 0
        zerocount = 0
        onecount = 0
        for i in range(0, max):
            file = open('dataset/stem/' + str(workfiles[i]), 'r')
            txt = str(file.read())
            Xalldata[i] = txt[16:]
            convert = list(txt[:15])
            if convert[Neural] == 'l':
                Yalldata[i] = 0
                zerocount+=1
            elif convert[Neural] == 'r':
                Yalldata[i] = 1
                onecount+=1
            else:
                Yalldata[i] = 0.5
        sequences = tokenizer.texts_to_sequences(Xalldata)
        data = pad_sequences(sequences, maxlen=maxlen)
        tr0=0
        tr1=0
        tt0=0
        tt1=0
        counter0 = 0
        counter1 = 0
        for i in range(0, max):
            rev = max-1-i
            if Yalldata[rev] == 0:
                if counter0 % 5 == 0:
                    if testcount<(max-test):
                        Ytt[testcount] = 0
                        tt0+=1
                        Xtt[testcount] = data[rev]
                        testcount += 1
                    else:
                        Ytr[traincount] = 0
                        tr0 += 1
                        Xtr[traincount] = data[rev]
                        traincount += 1
                else:
                    Ytr[traincount] = 0
                    tr0+=1
                    Xtr[traincount] = data[rev]
                    traincount += 1
                counter0+=1
            elif Yalldata[rev] == 1:
                if counter1 % 5 == 0:
                    if testcount < (max - test):
                        Ytt[testcount] = 1
                        tt1+=1
                        Xtt[testcount] = data[rev]
                        testcount += 1
                    else:
                        Ytr[traincount] = 1
                        tr1 += 1
                        Xtr[traincount] = data[rev]
                        traincount += 1
                else:
                    Ytr[traincount] = 1
                    tr1+=1
                    Xtr[traincount] = data[rev]
                    traincount += 1
                counter1+=1
        self.textBrowserNeuralConsole.insertPlainText(
            "Обучающая выборка: Значений '0': " + str(tr0) + "; Значений '1': " + str(tr1) + ";\nТестовая выборка: Значений '0': "+str(tt0)+"; Значений '1': "+str(tt1)+"\n")
        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
        return ((Xtr, Ytr), (Xtt, Ytt))

    def loadnet(self):
        global Neural
        global model
        json_file = open("./dataset/Neural" + str(Neural) + ".json", "r")
        model_json = json_file.read()
        json_file.close()
        model = model_from_json(model_json)
        model.load_weights("./dataset/Neural" + str(Neural) + ".h5")
        model.compile(loss="binary_crossentropy", optimizer="adam", metrics=["accuracy"])
        return (model)

    def fullstemconv(self):
        self.textBrowserNeuralConsole.insertPlainText('(Подготовка данных) Перевожу датасет в стемминг вид...\n')
        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
        dir_remove = os.listdir('./dataset/stem')
        for j in range(0,len(dir_remove)):
            os.remove('./dataset/stem/'+dir_remove[j])
        dir_work = os.listdir('./dataset/info')
        for i in range(0, len(dir_work)):
            self.textBrowserNeuralConsole.insertPlainText('Перевод датасета: /dataset/info/'+str(dir_work[i])+' в /dataset/stem/'+str(dir_work[i])[:-4]+'.stem\n')
            self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
            stemconv('./dataset/info/' + str(dir_work[i]))
            self.progressBarNeural.setValue(int(i / len(dir_work) * 100))
        self.textBrowserNeuralConsole.insertPlainText('Датасет приведен в стемминг вид. Данные для обучения подготовлены.\n')
        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
        self.progressBarNeural.setValue(0)
        return

    def tokenizer_up(self):
        self.textBrowserNeuralConsole.insertPlainText('(Подготовка данных) Составляю Tokenizer...\n')
        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
        tokenizer_update()
        self.textBrowserNeuralConsole.insertPlainText('Tokenizer составлен.\n')
        self.textBrowserNeuralConsole.moveCursor(QtGui.QTextCursor.End)
        return

    def NeuralQuick(self):
        self.checkBoxNeuralQuestimDeclatim.setCheckState(2)
        self.checkBoxNeuralReshitRassud.setCheckState(2)
        self.checkBoxNeuralSubjectObject.setCheckState(2)
        self.checkBoxNeuralProcessResult.setCheckState(2)
        self.checkBoxNeuralPositivNegativ.setCheckState(2)
        self.checkBoxNeuralStaticDynamic.setCheckState(2)
        self.checkBoxNeuralStrategyTactic.setCheckState(2)
        self.checkBoxNeuralConstructEmot.setCheckState(2)
        self.checkBoxNeuralBespechPredusmotr.setCheckState(2)
        self.checkBoxNeuralUstupUpryam.setCheckState(2)
        self.checkBoxNeuralAristocratDemocrat.setCheckState(2)
        self.checkBoxNeuralRatioIrratio.setCheckState(2)
        self.checkBoxNeuralExtraIntro.setCheckState(2)
        self.checkBoxNeuralLogicEthic.setCheckState(2)
        self.checkBoxNeuralSensIntuit.setCheckState(2)
        self.checkBoxNeuralFullStemConvert.setCheckState(2)
        self.checkBoxNeuralTokenizerUp.setCheckState(2)
        self.NeuralSpecial()

    def NeuralSpecial(self):
        global Neural
        if int(self.checkBoxNeuralFullStemConvert.checkState()) == 2:
            self.fullstemconv()
            self.checkBoxNeuralFullStemConvert.setCheckState(0)
        if int(self.checkBoxNeuralTokenizerUp.checkState()) == 2:
            self.tokenizer_up()
            self.checkBoxNeuralTokenizerUp.setCheckState(0)
        if int(self.checkBoxNeuralSensIntuit.checkState()) == 2:
            Neural = 0
            self.teach()
            self.checkBoxNeuralSensIntuit.setCheckState(0)
        if int(self.checkBoxNeuralLogicEthic.checkState()) == 2:
            Neural = 1
            self.teach()
            self.checkBoxNeuralLogicEthic.setCheckState(0)
        if int(self.checkBoxNeuralExtraIntro.checkState()) == 2:
            Neural = 2
            self.teach()
            self.checkBoxNeuralExtraIntro.setCheckState(0)
        if int(self.checkBoxNeuralRatioIrratio.checkState()) == 2:
            Neural = 3
            self.teach()
            self.checkBoxNeuralRatioIrratio.setCheckState(0)
        if int(self.checkBoxNeuralAristocratDemocrat.checkState()) == 2:
            Neural = 4
            self.teach()
            self.checkBoxNeuralAristocratDemocrat.setCheckState(0)
        if int(self.checkBoxNeuralUstupUpryam.checkState()) == 2:
            Neural = 5
            self.teach()
            self.checkBoxNeuralUstupUpryam.setCheckState(0)
        if int(self.checkBoxNeuralBespechPredusmotr.checkState()) == 2:
            Neural = 6
            self.teach()
            self.checkBoxNeuralBespechPredusmotr.setCheckState(0)
        if int(self.checkBoxNeuralConstructEmot.checkState()) == 2:
            Neural = 7
            self.teach()
            self.checkBoxNeuralConstructEmot.setCheckState(0)
        if int(self.checkBoxNeuralStrategyTactic.checkState()) == 2:
            Neural = 8
            self.teach()
            self.checkBoxNeuralStrategyTactic.setCheckState(0)
        if int(self.checkBoxNeuralStaticDynamic.checkState()) == 2:
            Neural = 9
            self.teach()
            self.checkBoxNeuralStaticDynamic.setCheckState(0)
        if int(self.checkBoxNeuralPositivNegativ.checkState()) == 2:
            Neural = 10
            self.teach()
            self.checkBoxNeuralPositivNegativ.setCheckState(0)
        if int(self.checkBoxNeuralProcessResult.checkState()) == 2:
            Neural = 11
            self.teach()
            self.checkBoxNeuralProcessResult.setCheckState(0)
        if int(self.checkBoxNeuralSubjectObject.checkState()) == 2:
            Neural = 12
            self.teach()
            self.checkBoxNeuralSubjectObject.setCheckState(0)
        if int(self.checkBoxNeuralReshitRassud.checkState()) == 2:
            Neural = 13
            self.teach()
            self.checkBoxNeuralReshitRassud.setCheckState(0)
        if int(self.checkBoxNeuralQuestimDeclatim.checkState()) == 2:
            Neural = 14
            self.teach()
            self.checkBoxNeuralQuestimDeclatim.setCheckState(0)
        Neural = 0


    def MoveTwitterSliders(self):
        self.horizontalSliderTwitterSensInt.setSliderPosition(slider[0])
        self.horizontalSliderTwitterLogicEthic.setSliderPosition(slider[1])
        self.horizontalSliderTwitterExtraIntro.setSliderPosition(slider[2])
        self.horizontalSliderTwitterRatioIrratio.setSliderPosition(slider[3])
        self.horizontalSliderTwitterAristocratDemocrat.setSliderPosition(slider[4])
        self.horizontalSliderTwitterUstupUpryam.setSliderPosition(slider[5])
        self.horizontalSliderTwitterBespechPredusmotr.setSliderPosition(slider[6])
        self.horizontalSliderTwitterConstructEmotiv.setSliderPosition(slider[7])
        self.horizontalSliderTwitterStrategyTactics.setSliderPosition(slider[8])
        self.horizontalSliderTwitterStaticDynamics.setSliderPosition(slider[9])
        self.horizontalSliderTwitterPositivNegativ.setSliderPosition(slider[10])
        self.horizontalSliderTwitterProcessResult.setSliderPosition(slider[11])
        self.horizontalSliderTwitterSubjectObject.setSliderPosition(slider[12])
        self.horizontalSliderTwitterReshitRassud.setSliderPosition(slider[13])
        self.horizontalSliderTwitterQuestimDeklatim.setSliderPosition(slider[14])

    def MoveVkSliders(self):
        self.horizontalSliderVkSensInt.setSliderPosition(slider[0])
        self.horizontalSliderVkLogicEthic.setSliderPosition(slider[1])
        self.horizontalSliderVkExtraIntro.setSliderPosition(slider[2])
        self.horizontalSliderVkRatioIrratio.setSliderPosition(slider[3])
        self.horizontalSliderVkAristocratDemocrat.setSliderPosition(slider[4])
        self.horizontalSliderVkUstupUpryam.setSliderPosition(slider[5])
        self.horizontalSliderVkBespechPredusmotr.setSliderPosition(slider[6])
        self.horizontalSliderVkConstructEmotiv.setSliderPosition(slider[7])
        self.horizontalSliderVkStrategyTactics.setSliderPosition(slider[8])
        self.horizontalSliderVkStaticDynamics.setSliderPosition(slider[9])
        self.horizontalSliderVkPositivNegativ.setSliderPosition(slider[10])
        self.horizontalSliderVkProcessResult.setSliderPosition(slider[11])
        self.horizontalSliderVkSubjectObject.setSliderPosition(slider[12])
        self.horizontalSliderVkReshitRassud.setSliderPosition(slider[13])
        self.horizontalSliderVkQuestimDeklatim.setSliderPosition(slider[14])

    def MoveTextSliders (self):
        self.horizontalSliderTextSensInt.setSliderPosition(slider[0])
        self.horizontalSliderTextLogicEthic.setSliderPosition(slider[1])
        self.horizontalSliderTextExtraIntro.setSliderPosition(slider[2])
        self.horizontalSliderTextRatioIrratio.setSliderPosition(slider[3])
        self.horizontalSliderTextAristocratDemocrat.setSliderPosition(slider[4])
        self.horizontalSliderTextUstupUpryam.setSliderPosition(slider[5])
        self.horizontalSliderTextBespechPredusmotr.setSliderPosition(slider[6])
        self.horizontalSliderTextConstructEmotiv.setSliderPosition(slider[7])
        self.horizontalSliderTextStrategyTactics.setSliderPosition(slider[8])
        self.horizontalSliderTextStaticDynamics.setSliderPosition(slider[9])
        self.horizontalSliderTextPositivNegativ.setSliderPosition(slider[10])
        self.horizontalSliderTextProcessResult.setSliderPosition(slider[11])
        self.horizontalSliderTextSubjectObject.setSliderPosition(slider[12])
        self.horizontalSliderTextReshitRassud.setSliderPosition(slider[13])
        self.horizontalSliderTextQuestimDeklatim.setSliderPosition(slider[14])


    def EducateDropAllSettings(self):
        self.horizontalSliderEducateSensInt.setSliderPosition(0)
        self.horizontalSliderEducateAristocratDemocrat.setSliderPosition(0)
        self.horizontalSliderEducateBespechPredusmotr.setSliderPosition(0)
        self.horizontalSliderEducateConstructEmotiv.setSliderPosition(0)
        self.horizontalSliderEducateExtraIntro.setSliderPosition(0)
        self.horizontalSliderEducateLogicEthic.setSliderPosition(0)
        self.horizontalSliderEducatePositivNegativ.setSliderPosition(0)
        self.horizontalSliderEducateProcessResult.setSliderPosition(0)
        self.horizontalSliderEducateQuestimDeklatim.setSliderPosition(0)
        self.horizontalSliderEducateRatioIrratio.setSliderPosition(0)
        self.horizontalSliderEducateReshitRassud.setSliderPosition(0)
        self.horizontalSliderEducateStaticDynamics.setSliderPosition(0)
        self.horizontalSliderEducateStrategyTactics.setSliderPosition(0)
        self.horizontalSliderEducateSubjectObject.setSliderPosition(0)
        self.horizontalSliderEducateUstupUpryam.setSliderPosition(0)

    def TextGoToEducate(self):
        self.horizontalSliderEducateSensInt.setSliderPosition(self.horizontalSliderTextSensInt.value())
        self.horizontalSliderEducateAristocratDemocrat.setSliderPosition(self.horizontalSliderTextAristocratDemocrat.value())
        self.horizontalSliderEducateBespechPredusmotr.setSliderPosition(self.horizontalSliderTextBespechPredusmotr.value())
        self.horizontalSliderEducateConstructEmotiv.setSliderPosition(self.horizontalSliderTextConstructEmotiv.value())
        self.horizontalSliderEducateExtraIntro.setSliderPosition(self.horizontalSliderTextExtraIntro.value())
        self.horizontalSliderEducateLogicEthic.setSliderPosition(self.horizontalSliderTextLogicEthic.value())
        self.horizontalSliderEducatePositivNegativ.setSliderPosition(self.horizontalSliderTextPositivNegativ.value())
        self.horizontalSliderEducateProcessResult.setSliderPosition(self.horizontalSliderTextProcessResult.value())
        self.horizontalSliderEducateQuestimDeklatim.setSliderPosition(self.horizontalSliderTextQuestimDeklatim.value())
        self.horizontalSliderEducateRatioIrratio.setSliderPosition(self.horizontalSliderTextRatioIrratio.value())
        self.horizontalSliderEducateReshitRassud.setSliderPosition(self.horizontalSliderTextReshitRassud.value())
        self.horizontalSliderEducateStaticDynamics.setSliderPosition(self.horizontalSliderTextStaticDynamics.value())
        self.horizontalSliderEducateStrategyTactics.setSliderPosition(self.horizontalSliderTextStrategyTactics.value())
        self.horizontalSliderEducateSubjectObject.setSliderPosition(self.horizontalSliderTextSubjectObject.value())
        self.horizontalSliderEducateUstupUpryam.setSliderPosition(self.horizontalSliderTextUstupUpryam.value())
        self.plainEducateEdit.setPlainText(self.textEdit.toPlainText())
        self.tabMain.setCurrentIndex(1)
        self.tabAllEducate.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        self.textEdit.setPlainText("")
        self.horizontalSliderTextSensInt.setSliderPosition(0)
        self.horizontalSliderTextAristocratDemocrat.setSliderPosition(0)
        self.horizontalSliderTextBespechPredusmotr.setSliderPosition(0)
        self.horizontalSliderTextConstructEmotiv.setSliderPosition(0)
        self.horizontalSliderTextExtraIntro.setSliderPosition(0)
        self.horizontalSliderTextLogicEthic.setSliderPosition(0)
        self.horizontalSliderTextPositivNegativ.setSliderPosition(0)
        self.horizontalSliderTextProcessResult.setSliderPosition(0)
        self.horizontalSliderTextQuestimDeklatim.setSliderPosition(0)
        self.horizontalSliderTextRatioIrratio.setSliderPosition(0)
        self.horizontalSliderTextReshitRassud.setSliderPosition(0)
        self.horizontalSliderTextStaticDynamics.setSliderPosition(0)
        self.horizontalSliderTextStrategyTactics.setSliderPosition(0)
        self.horizontalSliderTextSubjectObject.setSliderPosition(0)
        self.horizontalSliderTextUstupUpryam.setSliderPosition(0)


    def showDataset(self):
        self.listWidget.clear()
        dir_work = os.listdir('./dataset/info')
        for i in range(0, len(dir_work)):
            self.listWidget.addItem(dir_work[i])
        i = 1
        while 1:
            k = str(i)
            while 1:
                if len(k)<6:
                    k = '0'+k
                else:
                    break
            if (os.path.exists('dataset/info/'+str(k)+'.sna')):
                i+=1
            else:
                self.spinBox.setValue(i)
                break

    def fromDataset(self):
        file = open('dataset/info/'+str(self.listWidget.currentItem().text()),'r')
        text = file.read()
        file.close()
        self.horizontalSliderEducateSensInt.setSliderPosition(lmrDecrypt(text[0]))
        self.horizontalSliderEducateLogicEthic.setSliderPosition(lmrDecrypt(text[1]))
        self.horizontalSliderEducateExtraIntro.setSliderPosition(lmrDecrypt(text[2]))
        self.horizontalSliderEducateRatioIrratio.setSliderPosition(lmrDecrypt(text[3]))
        self.horizontalSliderEducateAristocratDemocrat.setSliderPosition(lmrDecrypt(text[4]))
        self.horizontalSliderEducateUstupUpryam.setSliderPosition(lmrDecrypt(text[5]))
        self.horizontalSliderEducateBespechPredusmotr.setSliderPosition(lmrDecrypt(text[6]))
        self.horizontalSliderEducateConstructEmotiv.setSliderPosition(lmrDecrypt(text[7]))
        self.horizontalSliderEducateStrategyTactics.setSliderPosition(lmrDecrypt(text[8]))
        self.horizontalSliderEducateStaticDynamics.setSliderPosition(lmrDecrypt(text[9]))
        self.horizontalSliderEducatePositivNegativ.setSliderPosition(lmrDecrypt(text[10]))
        self.horizontalSliderEducateProcessResult.setSliderPosition(lmrDecrypt(text[11]))
        self.horizontalSliderEducateSubjectObject.setSliderPosition(lmrDecrypt(text[12]))
        self.horizontalSliderEducateReshitRassud.setSliderPosition(lmrDecrypt(text[13]))
        self.horizontalSliderEducateQuestimDeklatim.setSliderPosition(lmrDecrypt(text[14]))
        self.plainEducateEdit.setPlainText(text[16:])
        self.spinBox.setValue(int(str(self.listWidget.currentItem().text())[:-4]))
        self.tabWidget_2.setCurrentIndex(0)

    def intoDataset(self):
        if len(str(self.plainEducateEdit.toPlainText()))>0:
            num = str(self.spinBox.text())
            while 1:
                if len(num)<6:
                    num = '0'+num
                else:
                    break

            file = open('dataset/info/'+str(num)+'.sna','w')
            file.write(lmrCrypt(int(self.horizontalSliderEducateSensInt.value()))+str(lmrCrypt(int(self.horizontalSliderEducateLogicEthic.value())))+str(lmrCrypt(int(self.horizontalSliderEducateExtraIntro.value())))+str(lmrCrypt(int(self.horizontalSliderEducateRatioIrratio.value())))+str(lmrCrypt(int(self.horizontalSliderEducateAristocratDemocrat.value())))+str(lmrCrypt(int(self.horizontalSliderEducateUstupUpryam.value())))+str(lmrCrypt(int(self.horizontalSliderEducateBespechPredusmotr.value())))+str(lmrCrypt(int(self.horizontalSliderEducateConstructEmotiv.value())))+str(lmrCrypt(int(self.horizontalSliderEducateStrategyTactics.value())))+str(lmrCrypt(int(self.horizontalSliderEducateStaticDynamics.value())))+str(lmrCrypt(int(self.horizontalSliderEducatePositivNegativ.value())))+str(lmrCrypt(int(self.horizontalSliderEducateProcessResult.value())))+str(lmrCrypt(int(self.horizontalSliderEducateSubjectObject.value())))+str(lmrCrypt(int(self.horizontalSliderEducateReshitRassud.value())))+str(lmrCrypt(int(self.horizontalSliderEducateQuestimDeklatim.value())))+' '+self.plainEducateEdit.toPlainText())
            self.showDataset()
            self.plainEducateEdit.clear()
            self.EducateDropAllSettings()
            file.close()

    def deleteDataset(self):
        if len(os.listdir('./dataset/info'))>0:
            item = str(self.listWidget.currentItem().text())
            dir_work = os.listdir('./dataset/info')
            for i in range(0, len(dir_work)):
                if str(dir_work[i]) == str(item):
                    item = int(i)
                    break
            os.remove('dataset/info/' + str(self.listWidget.currentItem().text()))
            self.showDataset()
            if item>1:
                self.listWidget.setCurrentRow(item-1)
            else:
                self.listWidget.setCurrentRow(0)


    def Vklistmove(self):
        global Vklist
        for i in range(0,15):
            res = []
            ult = 0
            for j in range(0,100):
                if Vklist[j][0]>=0:
                    res.append(Vklist[j][i])
            for k in range(0,len(res)):
                ult += res[k]
            if(len(res)>0):
                result = ult/len(res)
                if result<=0.15:
                    slider[i] = -3
                elif result>0.15 and result<=0.31:
                    slider[i] = -2
                elif result>0.31 and result<=0.47:
                    slider[i] = -1
                elif result>0.47 and result<=0.53:
                    slider[i] = 0
                elif result>0.53 and result<=0.69:
                    slider[i] = 1
                elif result>0.69 and result<=0.85:
                    slider[i] = 2
                elif result>0.85:
                    slider[i] = 3
            else:
                slider[i]=0
        self.MoveVkSliders()
        for j in range(0, 15):
            slider[j] = 0

    def addVkInfoDisplay(self):
        global Vklist
        global VkVisible
        global Neural
        for i in range(0,100):
            Vklist[i][0]=-1
        self.listWidgetVkInfoDisplay.clear()
        self.progressBarVk.setValue(0)
        wall = vk_api.wall.get(domain = self.lineEditVkInput.text(), count=100)
        VkVisible = []
        analysis = []
        for i in range(1, len(wall)):
            self.progressBarVk.setValue(int(((i + 1) / len(wall)) * 30))
            if wall[i]['post_type'] == 'post' and wall[i]['text'] != '' and wall[i]['from_id'] == wall[i]['to_id']:
                self.listWidgetVkInfoDisplay.addItem(wall[i]['text'])
                VkVisible.append(wall[i]['text'])
                analysis.append(stemconvtext(wall[i]['text']))
        #print(analysis)
        analysis = tokenizer.texts_to_sequences(analysis)
        #print(analysis)
        analysis = pad_sequences(analysis, maxlen=maxlen)
        #print(analysis)
        self.progressBarVk.setValue(35)
        for k in range(0,15):
            Neural = k
            self.loadnet()
            result = model.predict(analysis)
            self.progressBarVk.setValue(int(((i + 1) / 15) * 65)+35)
            for l in range(0,len(result)):
                Vklist[l][k]=result[l]
        self.Vklistmove()
        self.progressBarVk.setValue(0)
        Neural = 0

    def deleteVkInfoDisplay(self):
        global VkVisible
        global Vklist
        Vklist[self.listWidgetVkInfoDisplay.currentRow()][0]=-1
        self.Vklistmove()
        self.listWidgetVkInfoDisplay.currentItem().setHidden(1)

    def moveToTextVkInfoDisplay(self):
        self.tabAllDiag.setCurrentIndex(0)
        for i in range(0,15):
            result = Vklist[self.listWidgetVkInfoDisplay.currentRow()][i]
            if result<=0.15:
                slider[i] = -3
            elif result>0.15 and result<=0.31:
                slider[i] = -2
            elif result>0.31 and result<=0.47:
                slider[i] = -1
            elif result>0.47 and result<=0.53:
                slider[i] = 0
            elif result>0.53 and result<=0.69:
                slider[i] = 1
            elif result>0.69 and result<=0.85:
                slider[i] = 2
            elif result>0.85:
                slider[i] = 3
            print('result['+str(i)+'] = '+str(result))
        self.MoveTextSliders()
        for j in range(0,15):
           slider[j] = 0
        self.textEdit.setPlainText(self.listWidgetVkInfoDisplay.currentItem().text())


    def Twitterlistmove(self):
        global Twitterlist
        for i in range(0, 15):
            res = []
            ult = 0
            for j in range(0, 100):
                if Twitterlist[j][0] >= 0:
                    res.append(Twitterlist[j][i])
            for k in range(0, len(res)):
                ult += res[k]
            if (len(res) > 0):
                result = ult / len(res)
                if result <= 0.15:
                    slider[i] = -3
                elif result > 0.15 and result <= 0.31:
                    slider[i] = -2
                elif result > 0.31 and result <= 0.47:
                    slider[i] = -1
                elif result > 0.47 and result <= 0.53:
                    slider[i] = 0
                elif result > 0.53 and result <= 0.69:
                    slider[i] = 1
                elif result > 0.69 and result <= 0.85:
                    slider[i] = 2
                elif result > 0.85:
                    slider[i] = 3
            else:
                slider[i] = 0
        self.MoveTwitterSliders()
        for j in range(0, 15):
            slider[j] = 0

    def addTwitterInfoDisplay(self):
        global Twitterlist
        global TwitterVisible
        global Neural
        for i in range(0, 100):
            Twitterlist[i][0] = -1
        self.listWidgetTwitterInfoDisplay.clear()
        self.progressBarTwitter.setValue(0)
        public_tweets = api.user_timeline(self.lineEditTwitterInput_2.text(), count=100)
        TwitterVisible = []
        analysis = []
        count = 0
        for tweet in public_tweets:
            count+=1
            self.progressBarTwitter.setValue(int((count / 100) * 30))
            if tweet.text[:13] == 'https://t.co/' and len(tweet.text)<25:
                print('Image Post')
            else:
                print(tweet.text)
                self.listWidgetTwitterInfoDisplay.addItem(tweet.text)
                TwitterVisible.append(tweet.text)
                analysis.append(stemconvtext(tweet.text))
        #print(analysis)
        self.progressBarTwitter.setValue(30)
        analysis = tokenizer.texts_to_sequences(analysis)
        #print(analysis)
        analysis = pad_sequences(analysis, maxlen=maxlen)
        #print(analysis)
        self.progressBarTwitter.setValue(35)
        for k in range(0, 15):
            Neural = k
            self.loadnet()
            result = model.predict(analysis)
            self.progressBarTwitter.setValue(int(((i + 1) / 15) * 65)+35)
            for l in range(0, len(result)):
                Twitterlist[l][k] = result[l]
        self.progressBarTwitter.setValue(0)
        self.Twitterlistmove()
        Neural = 0

    def deleteTwitterInfoDisplay(self):
        global TwitterVisible
        global Twitterlist
        Twitterlist[self.listWidgetTwitterInfoDisplay.currentRow()][0] = -1
        self.Twitterlistmove()
        self.listWidgetTwitterInfoDisplay.currentItem().setHidden(1)

    def moveToTextTwitterInfoDisplay(self):
        self.tabAllDiag.setCurrentIndex(0)
        for i in range(0, 15):
            result = Twitterlist[self.listWidgetTwitterInfoDisplay.currentRow()][i]
            if result <= 0.15:
                slider[i] = -3
            elif result > 0.15 and result <= 0.31:
                slider[i] = -2
            elif result > 0.31 and result <= 0.47:
                slider[i] = -1
            elif result > 0.47 and result <= 0.53:
                slider[i] = 0
            elif result > 0.53 and result <= 0.69:
                slider[i] = 1
            elif result > 0.69 and result <= 0.85:
                slider[i] = 2
            elif result > 0.85:
                slider[i] = 3
            print('result[' + str(i) + '] = ' + str(result))
        self.MoveTextSliders()
        for j in range(0, 15):
            slider[j] = 0
        self.textEdit.setPlainText(self.listWidgetTwitterInfoDisplay.currentItem().text())


    def openVocabularyBlackSens(self):
        file = open('dataset/blacksens.voc', 'r')
        self.pushButtonVocabularySaveChanges.setText('Сохранить изменения (ЧС)')
        self.plainVocabularyEdit.setPlainText(file.read())
        file.close()

    def openVocabularyWhiteSens(self):
        file = open('dataset/whitesens.voc', 'r')
        self.pushButtonVocabularySaveChanges.setText('Сохранить изменения (БС)')
        self.plainVocabularyEdit.setPlainText(file.read())
        file.close()

    def openVocabularyBlackInt(self):
        file = open('dataset/blackint.voc', 'r')
        self.pushButtonVocabularySaveChanges.setText('Сохранить изменения (ЧИ)')
        self.plainVocabularyEdit.setPlainText(file.read())
        file.close()

    def openVocabularyWhiteInt(self):
        file = open('dataset/whiteint.voc', 'r')
        self.pushButtonVocabularySaveChanges.setText('Сохранить изменения (БИ)')
        self.plainVocabularyEdit.setPlainText(file.read())
        file.close()

    def openVocabularyBlackLogic(self):
        file = open('dataset/blacklogic.voc', 'r')
        self.pushButtonVocabularySaveChanges.setText('Сохранить изменения (ЧЛ)')
        self.plainVocabularyEdit.setPlainText(file.read())
        file.close()

    def openVocabularyWhiteLogic(self):
        file = open('dataset/whitelogic.voc', 'r')
        self.pushButtonVocabularySaveChanges.setText('Сохранить изменения (БЛ)')
        self.plainVocabularyEdit.setPlainText(file.read())
        file.close()

    def openVocabularyBlackEthic(self):
        file = open('dataset/blackethic.voc', 'r')
        self.pushButtonVocabularySaveChanges.setText('Сохранить изменения (ЧЭ)')
        self.plainVocabularyEdit.setPlainText(file.read())
        file.close()

    def openVocabularyWhiteEthic(self):
        file = open('dataset/whiteethic.voc', 'r')
        self.pushButtonVocabularySaveChanges.setText('Сохранить изменения (БЭ)')
        self.plainVocabularyEdit.setPlainText(file.read())
        file.close()

    def saveVocabularyChanges(self):
        buttext = str(self.pushButtonVocabularySaveChanges.text())
        self.progressBarVocabulary.setValue(0)
        if buttext != 'Сохранить изменения':
            if buttext == 'Сохранить изменения (ЧС)':
                buttext = 'dataset/blacksens.voc'
            elif buttext == 'Сохранить изменения (БС)':
                buttext = 'dataset/whitesens.voc'
            elif buttext == 'Сохранить изменения (ЧИ)':
                buttext = 'dataset/blackint.voc'
            elif buttext == 'Сохранить изменения (БИ)':
                buttext = 'dataset/whiteint.voc'
            elif buttext == 'Сохранить изменения (ЧЛ)':
                buttext = 'dataset/blacklogic.voc'
            elif buttext == 'Сохранить изменения (БЛ)':
                buttext = 'dataset/whitelogic.voc'
            elif buttext == 'Сохранить изменения (ЧЭ)':
                buttext = 'dataset/blackethic.voc'
            elif buttext == 'Сохранить изменения (БЭ)':
                buttext = 'dataset/whiteethic.voc'
            stem = open(buttext[:-4]+'.stem','w')
            self.progressBarVocabulary.setValue(5)
            orig = re.compile("([а-яА-Я-']+)").findall(self.plainVocabularyEdit.toPlainText())#.split()
            txt = re.compile("([а-яА-Я-']+)").findall(stemconvtext(self.plainVocabularyEdit.toPlainText()))
            self.progressBarVocabulary.setValue(65)
            l = 0
            for i in range(0,len(txt)):
                self.progressBarVocabulary.setValue(int(((i + 1) / len(txt)) * 35)+65)
                if str(txt[i])!='не' and str(txt[i])!='в' and str(txt[i])!='уж' and str(txt[i])!='как' and str(txt[i])!='без' and str(txt[i])!='до' and str(txt[i])!='из' and str(txt[i])!='к' and str(txt[i])!='на' and str(txt[i])!='по' and str(txt[i])!='о' and str(txt[i])!='от' and str(txt[i])!='при' and str(txt[i])!='с' and str(txt[i])!='у' and str(txt[i])!='за' and str(txt[i])!='над' and str(txt[i])!='об' and str(txt[i])!='под' and str(txt[i])!='про' and str(txt[i])!='для' :
                    self.textBrowserNeuralConsole.insertPlainText('#'+str(l)+': orig = '+str(orig[i])+'; stem = '+str(txt[i])+'\n')
                    l += 1
                    stem.write(str(txt[i])+'\n')
            stem.close()
            file = open(buttext, 'w')
            file.write(self.plainVocabularyEdit.toPlainText())
            file.close()
            self.plainVocabularyEdit.clear()
            self.progressBarVocabulary.setValue(0)
            self.pushButtonVocabularySaveChanges.setText('Сохранить изменения')



    def setupUi(self, MainWindow):
        self.timer = QtCore.QTimer()
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1176, 749)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./Interface/Ico.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.tabMain = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabMain.sizePolicy().hasHeightForWidth())
        self.tabMain.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.tabMain.setFont(font)
        self.tabMain.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.tabMain.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabMain.setObjectName("tabMain")
        self.tabDiagnostic = QtWidgets.QWidget()
        self.tabDiagnostic.setObjectName("tabDiagnostic")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.tabDiagnostic)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.tabAllDiag = QtWidgets.QTabWidget(self.tabDiagnostic)
        self.tabAllDiag.setUsesScrollButtons(True)
        self.tabAllDiag.setDocumentMode(False)
        self.tabAllDiag.setTabsClosable(False)
        self.tabAllDiag.setMovable(False)
        self.tabAllDiag.setObjectName("tabAllDiag")
        self.tabTextDiag = QtWidgets.QWidget()
        self.tabTextDiag.setObjectName("tabTextDiag")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tabTextDiag)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 1, 2, 1, 1)
        self.pushButtonTextGoToEducate = QtWidgets.QPushButton(self.tabTextDiag)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("./Interface/Educate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextGoToEducate.setIcon(icon1)
        self.pushButtonTextGoToEducate.setObjectName("pushButtonTextGoToEducate")
        self.gridLayout_2.addWidget(self.pushButtonTextGoToEducate, 1, 1, 1, 1)
        self.pushButtonTextDiag = QtWidgets.QPushButton(self.tabTextDiag)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("./Interface/Diag.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextDiag.setIcon(icon2)
        self.pushButtonTextDiag.setObjectName("pushButtonTextDiag")
        self.gridLayout_2.addWidget(self.pushButtonTextDiag, 1, 0, 1, 1)
        self.tabWidgetText = QtWidgets.QTabWidget(self.tabTextDiag)
        self.tabWidgetText.setMaximumSize(QtCore.QSize(500, 16777215))
        self.tabWidgetText.setObjectName("tabWidgetText")
        self.tabTextReininResult = QtWidgets.QWidget()
        self.tabTextReininResult.setObjectName("tabTextReininResult")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.tabTextReininResult)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.pushButtonTextShowReshit = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowReshit.setObjectName("pushButtonTextShowReshit")
        self.gridLayout_6.addWidget(self.pushButtonTextShowReshit, 21, 6, 1, 1)
        self.pushButtonTextShowTactics = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowTactics.setObjectName("pushButtonTextShowTactics")
        self.gridLayout_6.addWidget(self.pushButtonTextShowTactics, 15, 4, 1, 1)
        self.pushButtonTextShowDynamics = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowDynamics.setObjectName("pushButtonTextShowDynamics")
        self.gridLayout_6.addWidget(self.pushButtonTextShowDynamics, 15, 10, 1, 1)
        self.pushButtonTextShowStatic = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowStatic.setObjectName("pushButtonTextShowStatic")
        self.gridLayout_6.addWidget(self.pushButtonTextShowStatic, 15, 6, 1, 1)
        self.pushButtonTextShowStrategy = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowStrategy.setObjectName("pushButtonTextShowStrategy")
        self.gridLayout_6.addWidget(self.pushButtonTextShowStrategy, 15, 1, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_12.setMaximumSize(QtCore.QSize(40, 20))
        self.label_12.setText("")
        self.label_12.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_12.setScaledContents(True)
        self.label_12.setObjectName("label_12")
        self.gridLayout_6.addWidget(self.label_12, 15, 3, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_13.setMaximumSize(QtCore.QSize(40, 20))
        self.label_13.setText("")
        self.label_13.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_13.setScaledContents(True)
        self.label_13.setObjectName("label_13")
        self.gridLayout_6.addWidget(self.label_13, 15, 8, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem1, 23, 3, 1, 1)
        self.pushButtonTextShowQestim = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowQestim.setObjectName("pushButtonTextShowQestim")
        self.gridLayout_6.addWidget(self.pushButtonTextShowQestim, 24, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.tabTextReininResult)
        self.label.setMaximumSize(QtCore.QSize(40, 20))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.gridLayout_6.addWidget(self.label, 6, 3, 1, 1)
        self.pushButtonTextShowPositiv = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowPositiv.setObjectName("pushButtonTextShowPositiv")
        self.gridLayout_6.addWidget(self.pushButtonTextShowPositiv, 18, 1, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem2, 5, 3, 1, 1)
        self.pushButtonTextShowIntrovert = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowIntrovert.setObjectName("pushButtonTextShowIntrovert")
        self.gridLayout_6.addWidget(self.pushButtonTextShowIntrovert, 6, 4, 1, 1)
        self.pushButtonTextShowRassud = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowRassud.setObjectName("pushButtonTextShowRassud")
        self.gridLayout_6.addWidget(self.pushButtonTextShowRassud, 21, 10, 1, 1)
        self.pushButtonTextShowResult = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowResult.setObjectName("pushButtonTextShowResult")
        self.gridLayout_6.addWidget(self.pushButtonTextShowResult, 18, 10, 1, 1)
        self.horizontalSliderTextAristocratDemocrat = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextAristocratDemocrat.setMinimum(-3)
        self.horizontalSliderTextAristocratDemocrat.setMaximum(3)
        self.horizontalSliderTextAristocratDemocrat.setPageStep(1)
        self.horizontalSliderTextAristocratDemocrat.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextAristocratDemocrat.setObjectName("horizontalSliderTextAristocratDemocrat")
        self.gridLayout_6.addWidget(self.horizontalSliderTextAristocratDemocrat, 10, 1, 1, 4)
        self.horizontalSliderTextProcessResult = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextProcessResult.setMinimum(-3)
        self.horizontalSliderTextProcessResult.setMaximum(3)
        self.horizontalSliderTextProcessResult.setPageStep(1)
        self.horizontalSliderTextProcessResult.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextProcessResult.setObjectName("horizontalSliderTextProcessResult")
        self.gridLayout_6.addWidget(self.horizontalSliderTextProcessResult, 19, 6, 1, 5)
        self.label_17 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_17.setMaximumSize(QtCore.QSize(40, 20))
        self.label_17.setText("")
        self.label_17.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_17.setScaledContents(True)
        self.label_17.setObjectName("label_17")
        self.gridLayout_6.addWidget(self.label_17, 18, 8, 1, 1)
        self.pushButtonTextShowDemocrat = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowDemocrat.setObjectName("pushButtonTextShowDemocrat")
        self.gridLayout_6.addWidget(self.pushButtonTextShowDemocrat, 9, 4, 1, 1)
        self.pushButtonTextShowAristocrat = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowAristocrat.setObjectName("pushButtonTextShowAristocrat")
        self.gridLayout_6.addWidget(self.pushButtonTextShowAristocrat, 9, 1, 1, 1)
        self.pushButtonTextShowUstup = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowUstup.setObjectName("pushButtonTextShowUstup")
        self.gridLayout_6.addWidget(self.pushButtonTextShowUstup, 9, 6, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.gridLayout_6.addWidget(self.label_9, 3, 10, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_5.setMaximumSize(QtCore.QSize(40, 20))
        self.label_5.setText("")
        self.label_5.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_5.setScaledContents(True)
        self.label_5.setObjectName("label_5")
        self.gridLayout_6.addWidget(self.label_5, 9, 3, 1, 1)
        self.pushButtonTextShowEthic = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowEthic.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("./Interface/Э.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextShowEthic.setIcon(icon3)
        self.pushButtonTextShowEthic.setIconSize(QtCore.QSize(42, 20))
        self.pushButtonTextShowEthic.setObjectName("pushButtonTextShowEthic")
        self.gridLayout_6.addWidget(self.pushButtonTextShowEthic, 2, 10, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem3, 11, 3, 1, 1)
        self.label_18 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_18.setMaximumSize(QtCore.QSize(40, 20))
        self.label_18.setText("")
        self.label_18.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_18.setScaledContents(True)
        self.label_18.setObjectName("label_18")
        self.gridLayout_6.addWidget(self.label_18, 21, 8, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout_6.addWidget(self.label_8, 3, 6, 1, 1)
        self.pushButtonTextShowSubject = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowSubject.setObjectName("pushButtonTextShowSubject")
        self.gridLayout_6.addWidget(self.pushButtonTextShowSubject, 21, 1, 1, 1)
        self.pushButtonTextShowProcess = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowProcess.setObjectName("pushButtonTextShowProcess")
        self.gridLayout_6.addWidget(self.pushButtonTextShowProcess, 18, 6, 1, 1)
        self.horizontalSliderTextLogicEthic = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextLogicEthic.setMinimum(-3)
        self.horizontalSliderTextLogicEthic.setMaximum(3)
        self.horizontalSliderTextLogicEthic.setPageStep(1)
        self.horizontalSliderTextLogicEthic.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextLogicEthic.setObjectName("horizontalSliderTextLogicEthic")
        self.gridLayout_6.addWidget(self.horizontalSliderTextLogicEthic, 4, 6, 1, 5)
        self.pushButtonTextShowNegativ = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowNegativ.setObjectName("pushButtonTextShowNegativ")
        self.gridLayout_6.addWidget(self.pushButtonTextShowNegativ, 18, 4, 1, 1)
        self.pushButtonTextShowObject = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowObject.setObjectName("pushButtonTextShowObject")
        self.gridLayout_6.addWidget(self.pushButtonTextShowObject, 21, 4, 1, 1)
        self.pushButtonTextShowUpryam = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowUpryam.setObjectName("pushButtonTextShowUpryam")
        self.gridLayout_6.addWidget(self.pushButtonTextShowUpryam, 9, 10, 1, 1)
        self.horizontalSliderTextSubjectObject = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextSubjectObject.setMinimum(-3)
        self.horizontalSliderTextSubjectObject.setMaximum(3)
        self.horizontalSliderTextSubjectObject.setPageStep(1)
        self.horizontalSliderTextSubjectObject.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextSubjectObject.setObjectName("horizontalSliderTextSubjectObject")
        self.gridLayout_6.addWidget(self.horizontalSliderTextSubjectObject, 22, 1, 1, 4)
        self.label_15 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_15.setMaximumSize(QtCore.QSize(40, 20))
        self.label_15.setText("")
        self.label_15.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_15.setScaledContents(True)
        self.label_15.setObjectName("label_15")
        self.gridLayout_6.addWidget(self.label_15, 21, 3, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_10.setMaximumSize(QtCore.QSize(40, 20))
        self.label_10.setText("")
        self.label_10.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_10.setScaledContents(True)
        self.label_10.setObjectName("label_10")
        self.gridLayout_6.addWidget(self.label_10, 12, 3, 1, 1)
        self.horizontalSliderTextReshitRassud = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextReshitRassud.setMinimum(-3)
        self.horizontalSliderTextReshitRassud.setMaximum(3)
        self.horizontalSliderTextReshitRassud.setPageStep(1)
        self.horizontalSliderTextReshitRassud.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextReshitRassud.setObjectName("horizontalSliderTextReshitRassud")
        self.gridLayout_6.addWidget(self.horizontalSliderTextReshitRassud, 22, 6, 1, 5)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem4, 20, 3, 1, 1)
        self.horizontalSliderTextUstupUpryam = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextUstupUpryam.setMinimum(-3)
        self.horizontalSliderTextUstupUpryam.setMaximum(3)
        self.horizontalSliderTextUstupUpryam.setPageStep(1)
        self.horizontalSliderTextUstupUpryam.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextUstupUpryam.setObjectName("horizontalSliderTextUstupUpryam")
        self.gridLayout_6.addWidget(self.horizontalSliderTextUstupUpryam, 10, 6, 1, 5)
        self.pushButtonTextShowPredusmotr = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowPredusmotr.setObjectName("pushButtonTextShowPredusmotr")
        self.gridLayout_6.addWidget(self.pushButtonTextShowPredusmotr, 12, 4, 1, 1)
        self.label_14 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_14.setMaximumSize(QtCore.QSize(40, 20))
        self.label_14.setText("")
        self.label_14.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_14.setScaledContents(True)
        self.label_14.setObjectName("label_14")
        self.gridLayout_6.addWidget(self.label_14, 18, 3, 1, 1)
        self.pushButtonTextShowBespech = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowBespech.setObjectName("pushButtonTextShowBespech")
        self.gridLayout_6.addWidget(self.pushButtonTextShowBespech, 12, 1, 1, 1)
        self.labelTextSensInt = QtWidgets.QLabel(self.tabTextReininResult)
        self.labelTextSensInt.setMaximumSize(QtCore.QSize(40, 20))
        self.labelTextSensInt.setText("")
        self.labelTextSensInt.setTextFormat(QtCore.Qt.AutoText)
        self.labelTextSensInt.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.labelTextSensInt.setScaledContents(True)
        self.labelTextSensInt.setAlignment(QtCore.Qt.AlignCenter)
        self.labelTextSensInt.setObjectName("labelTextSensInt")
        self.gridLayout_6.addWidget(self.labelTextSensInt, 2, 3, 1, 1)
        self.pushButtonTextShowDeklatim = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowDeklatim.setObjectName("pushButtonTextShowDeklatim")
        self.gridLayout_6.addWidget(self.pushButtonTextShowDeklatim, 24, 4, 1, 1)
        self.pushButtonTextShowEmotiv = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowEmotiv.setObjectName("pushButtonTextShowEmotiv")
        self.gridLayout_6.addWidget(self.pushButtonTextShowEmotiv, 12, 10, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_11.setMaximumSize(QtCore.QSize(40, 20))
        self.label_11.setText("")
        self.label_11.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_11.setScaledContents(True)
        self.label_11.setObjectName("label_11")
        self.gridLayout_6.addWidget(self.label_11, 12, 8, 1, 1)
        self.pushButtonTextShowConstrut = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowConstrut.setObjectName("pushButtonTextShowConstrut")
        self.gridLayout_6.addWidget(self.pushButtonTextShowConstrut, 12, 6, 1, 1)
        self.horizontalSliderTextStrategyTactics = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextStrategyTactics.setMinimum(-3)
        self.horizontalSliderTextStrategyTactics.setMaximum(3)
        self.horizontalSliderTextStrategyTactics.setPageStep(1)
        self.horizontalSliderTextStrategyTactics.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextStrategyTactics.setObjectName("horizontalSliderTextStrategyTactics")
        self.gridLayout_6.addWidget(self.horizontalSliderTextStrategyTactics, 16, 1, 1, 4)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem5, 2, 5, 1, 1)
        self.pushButtonTextShowLogic = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowLogic.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("./Interface/Л.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextShowLogic.setIcon(icon4)
        self.pushButtonTextShowLogic.setIconSize(QtCore.QSize(42, 20))
        self.pushButtonTextShowLogic.setObjectName("pushButtonTextShowLogic")
        self.gridLayout_6.addWidget(self.pushButtonTextShowLogic, 2, 6, 1, 1)
        self.pushButtonTextShowIntuit = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowIntuit.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("./Interface/И.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextShowIntuit.setIcon(icon5)
        self.pushButtonTextShowIntuit.setIconSize(QtCore.QSize(42, 20))
        self.pushButtonTextShowIntuit.setObjectName("pushButtonTextShowIntuit")
        self.gridLayout_6.addWidget(self.pushButtonTextShowIntuit, 2, 4, 1, 1)
        self.horizontalSliderTextExtraIntro = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextExtraIntro.setMinimum(-3)
        self.horizontalSliderTextExtraIntro.setMaximum(3)
        self.horizontalSliderTextExtraIntro.setPageStep(1)
        self.horizontalSliderTextExtraIntro.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextExtraIntro.setObjectName("horizontalSliderTextExtraIntro")
        self.gridLayout_6.addWidget(self.horizontalSliderTextExtraIntro, 7, 1, 1, 4)
        self.label_6 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_6.setMaximumSize(QtCore.QSize(40, 20))
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_6.setScaledContents(True)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_6.addWidget(self.label_6, 2, 8, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.gridLayout_6.addWidget(self.label_4, 3, 4, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.gridLayout_6.addWidget(self.label_3, 3, 1, 1, 1)
        self.horizontalSliderTextRatioIrratio = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextRatioIrratio.setMinimum(-3)
        self.horizontalSliderTextRatioIrratio.setMaximum(3)
        self.horizontalSliderTextRatioIrratio.setPageStep(1)
        self.horizontalSliderTextRatioIrratio.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextRatioIrratio.setObjectName("horizontalSliderTextRatioIrratio")
        self.gridLayout_6.addWidget(self.horizontalSliderTextRatioIrratio, 7, 6, 1, 5)
        self.label_2 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_2.setMaximumSize(QtCore.QSize(40, 20))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.gridLayout_6.addWidget(self.label_2, 6, 8, 1, 1)
        self.pushButtonTextShowRatio = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowRatio.setObjectName("pushButtonTextShowRatio")
        self.gridLayout_6.addWidget(self.pushButtonTextShowRatio, 6, 6, 1, 1)
        self.pushButtonTextShowIrratio = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowIrratio.setObjectName("pushButtonTextShowIrratio")
        self.gridLayout_6.addWidget(self.pushButtonTextShowIrratio, 6, 10, 1, 1)
        self.horizontalSliderTextPositivNegativ = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextPositivNegativ.setMinimum(-3)
        self.horizontalSliderTextPositivNegativ.setMaximum(3)
        self.horizontalSliderTextPositivNegativ.setPageStep(1)
        self.horizontalSliderTextPositivNegativ.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextPositivNegativ.setObjectName("horizontalSliderTextPositivNegativ")
        self.gridLayout_6.addWidget(self.horizontalSliderTextPositivNegativ, 19, 1, 1, 4)
        self.label_16 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_16.setMaximumSize(QtCore.QSize(40, 20))
        self.label_16.setText("")
        self.label_16.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_16.setScaledContents(True)
        self.label_16.setObjectName("label_16")
        self.gridLayout_6.addWidget(self.label_16, 24, 3, 1, 1)
        self.horizontalSliderTextQuestimDeklatim = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextQuestimDeklatim.setMinimum(-3)
        self.horizontalSliderTextQuestimDeklatim.setMaximum(3)
        self.horizontalSliderTextQuestimDeklatim.setPageStep(1)
        self.horizontalSliderTextQuestimDeklatim.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextQuestimDeklatim.setObjectName("horizontalSliderTextQuestimDeklatim")
        self.gridLayout_6.addWidget(self.horizontalSliderTextQuestimDeklatim, 25, 1, 1, 4)
        self.pushButtonTextShowExtravert = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowExtravert.setObjectName("pushButtonTextShowExtravert")
        self.gridLayout_6.addWidget(self.pushButtonTextShowExtravert, 6, 1, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem6, 0, 0, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem7, 2, 11, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem8, 2, 0, 1, 1)
        spacerItem9 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem9, 17, 3, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_7.setMaximumSize(QtCore.QSize(40, 20))
        self.label_7.setText("")
        self.label_7.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_7.setScaledContents(True)
        self.label_7.setObjectName("label_7")
        self.gridLayout_6.addWidget(self.label_7, 9, 8, 1, 1)
        self.horizontalSliderTextConstructEmotiv = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextConstructEmotiv.setMinimum(-3)
        self.horizontalSliderTextConstructEmotiv.setMaximum(3)
        self.horizontalSliderTextConstructEmotiv.setPageStep(1)
        self.horizontalSliderTextConstructEmotiv.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextConstructEmotiv.setObjectName("horizontalSliderTextConstructEmotiv")
        self.gridLayout_6.addWidget(self.horizontalSliderTextConstructEmotiv, 13, 6, 1, 5)
        self.horizontalSliderTextBespechPredusmotr = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextBespechPredusmotr.setMinimum(-3)
        self.horizontalSliderTextBespechPredusmotr.setMaximum(3)
        self.horizontalSliderTextBespechPredusmotr.setPageStep(1)
        self.horizontalSliderTextBespechPredusmotr.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextBespechPredusmotr.setObjectName("horizontalSliderTextBespechPredusmotr")
        self.gridLayout_6.addWidget(self.horizontalSliderTextBespechPredusmotr, 13, 1, 1, 4)
        spacerItem10 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem10, 14, 3, 1, 1)
        self.horizontalSliderTextStaticDynamics = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextStaticDynamics.setMinimum(-3)
        self.horizontalSliderTextStaticDynamics.setMaximum(3)
        self.horizontalSliderTextStaticDynamics.setPageStep(1)
        self.horizontalSliderTextStaticDynamics.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextStaticDynamics.setObjectName("horizontalSliderTextStaticDynamics")
        self.gridLayout_6.addWidget(self.horizontalSliderTextStaticDynamics, 16, 6, 1, 5)
        spacerItem11 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem11, 8, 3, 1, 1)
        self.pushButtonTextShowSensor = QtWidgets.QPushButton(self.tabTextReininResult)
        self.pushButtonTextShowSensor.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("./Interface/С.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextShowSensor.setIcon(icon6)
        self.pushButtonTextShowSensor.setIconSize(QtCore.QSize(42, 20))
        self.pushButtonTextShowSensor.setObjectName("pushButtonTextShowSensor")
        self.gridLayout_6.addWidget(self.pushButtonTextShowSensor, 2, 1, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem12, 26, 1, 1, 1)
        self.label_19 = QtWidgets.QLabel(self.tabTextReininResult)
        self.label_19.setAlignment(QtCore.Qt.AlignCenter)
        self.label_19.setObjectName("label_19")
        self.gridLayout_6.addWidget(self.label_19, 24, 6, 1, 5)
        self.progressBarText = QtWidgets.QProgressBar(self.tabTextReininResult)
        self.progressBarText.setProperty("value", 0)
        self.progressBarText.setObjectName("progressBarText")
        self.gridLayout_6.addWidget(self.progressBarText, 25, 6, 1, 5)
        self.horizontalSliderTextSensInt = QtWidgets.QSlider(self.tabTextReininResult)
        self.horizontalSliderTextSensInt.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.horizontalSliderTextSensInt.setMinimum(-3)
        self.horizontalSliderTextSensInt.setMaximum(3)
        self.horizontalSliderTextSensInt.setSingleStep(1)
        self.horizontalSliderTextSensInt.setPageStep(1)
        self.horizontalSliderTextSensInt.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTextSensInt.setObjectName("horizontalSliderTextSensInt")
        self.gridLayout_6.addWidget(self.horizontalSliderTextSensInt, 4, 1, 1, 4)
        self.tabWidgetText.addTab(self.tabTextReininResult, "")
        self.tabTextAspectResult = QtWidgets.QWidget()
        self.tabTextAspectResult.setObjectName("tabTextAspectResult")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.tabTextAspectResult)
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.label_165 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_165.setObjectName("label_165")
        self.gridLayout_7.addWidget(self.label_165, 2, 5, 1, 1)
        self.label_26 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_26.setObjectName("label_26")
        self.gridLayout_7.addWidget(self.label_26, 10, 3, 1, 1)
        self.labelTextWhiteIntuitCounter = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextWhiteIntuitCounter.setObjectName("labelTextWhiteIntuitCounter")
        self.gridLayout_7.addWidget(self.labelTextWhiteIntuitCounter, 8, 4, 1, 1)
        self.labelTextWhiteLogicCounter = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextWhiteLogicCounter.setObjectName("labelTextWhiteLogicCounter")
        self.gridLayout_7.addWidget(self.labelTextWhiteLogicCounter, 12, 4, 1, 1)
        self.label_30 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_30.setObjectName("label_30")
        self.gridLayout_7.addWidget(self.label_30, 12, 3, 1, 1)
        self.labelTextBlackLogicCounter = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextBlackLogicCounter.setObjectName("labelTextBlackLogicCounter")
        self.gridLayout_7.addWidget(self.labelTextBlackLogicCounter, 10, 4, 1, 1)
        self.label_32 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_32.setObjectName("label_32")
        self.gridLayout_7.addWidget(self.label_32, 14, 3, 1, 1)
        self.label_22 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_22.setObjectName("label_22")
        self.gridLayout_7.addWidget(self.label_22, 8, 3, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_7.addItem(spacerItem13, 13, 2, 1, 1)
        self.labelTextBlackEthicCounter = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextBlackEthicCounter.setObjectName("labelTextBlackEthicCounter")
        self.gridLayout_7.addWidget(self.labelTextBlackEthicCounter, 14, 4, 1, 1)
        self.pushButtonTextWhiteLogic = QtWidgets.QPushButton(self.tabTextAspectResult)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("./Interface/БЛ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextWhiteLogic.setIcon(icon7)
        self.pushButtonTextWhiteLogic.setIconSize(QtCore.QSize(20, 20))
        self.pushButtonTextWhiteLogic.setObjectName("pushButtonTextWhiteLogic")
        self.gridLayout_7.addWidget(self.pushButtonTextWhiteLogic, 12, 2, 1, 1)
        self.pushButtonTextBlackSens = QtWidgets.QPushButton(self.tabTextAspectResult)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("./Interface/ЧС.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextBlackSens.setIcon(icon8)
        self.pushButtonTextBlackSens.setIconSize(QtCore.QSize(20, 20))
        self.pushButtonTextBlackSens.setObjectName("pushButtonTextBlackSens")
        self.gridLayout_7.addWidget(self.pushButtonTextBlackSens, 2, 2, 1, 1)
        self.pushButtonTextWhiteEthic = QtWidgets.QPushButton(self.tabTextAspectResult)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("./Interface/БЭ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextWhiteEthic.setIcon(icon9)
        self.pushButtonTextWhiteEthic.setIconSize(QtCore.QSize(20, 20))
        self.pushButtonTextWhiteEthic.setObjectName("pushButtonTextWhiteEthic")
        self.gridLayout_7.addWidget(self.pushButtonTextWhiteEthic, 16, 2, 1, 1)
        self.pushButtonTextBlackEthic = QtWidgets.QPushButton(self.tabTextAspectResult)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("./Interface/ЧЭ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextBlackEthic.setIcon(icon10)
        self.pushButtonTextBlackEthic.setIconSize(QtCore.QSize(20, 20))
        self.pushButtonTextBlackEthic.setObjectName("pushButtonTextBlackEthic")
        self.gridLayout_7.addWidget(self.pushButtonTextBlackEthic, 14, 2, 1, 1)
        self.label_24 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_24.setObjectName("label_24")
        self.gridLayout_7.addWidget(self.label_24, 4, 3, 1, 1)
        self.pushButtonTextWhiteSens = QtWidgets.QPushButton(self.tabTextAspectResult)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("./Interface/БС.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextWhiteSens.setIcon(icon11)
        self.pushButtonTextWhiteSens.setIconSize(QtCore.QSize(20, 20))
        self.pushButtonTextWhiteSens.setObjectName("pushButtonTextWhiteSens")
        self.gridLayout_7.addWidget(self.pushButtonTextWhiteSens, 4, 2, 1, 1)
        self.label_27 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_27.setObjectName("label_27")
        self.gridLayout_7.addWidget(self.label_27, 6, 3, 1, 1)
        self.labelTextBlackIntuitCounter = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextBlackIntuitCounter.setObjectName("labelTextBlackIntuitCounter")
        self.gridLayout_7.addWidget(self.labelTextBlackIntuitCounter, 6, 4, 1, 1)
        spacerItem14 = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem14, 2, 0, 1, 1)
        self.pushButtonTextBlackLogic = QtWidgets.QPushButton(self.tabTextAspectResult)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("./Interface/ЧЛ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextBlackLogic.setIcon(icon12)
        self.pushButtonTextBlackLogic.setIconSize(QtCore.QSize(20, 20))
        self.pushButtonTextBlackLogic.setObjectName("pushButtonTextBlackLogic")
        self.gridLayout_7.addWidget(self.pushButtonTextBlackLogic, 10, 2, 1, 1)
        self.labelTextBlackSensCounter = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextBlackSensCounter.setObjectName("labelTextBlackSensCounter")
        self.gridLayout_7.addWidget(self.labelTextBlackSensCounter, 2, 4, 1, 1)
        self.label_20 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_20.setObjectName("label_20")
        self.gridLayout_7.addWidget(self.label_20, 2, 3, 1, 1)
        self.labelTextWhiteSensCounter = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextWhiteSensCounter.setObjectName("labelTextWhiteSensCounter")
        self.gridLayout_7.addWidget(self.labelTextWhiteSensCounter, 4, 4, 1, 1)
        self.pushButtonTextWhiteIntuit = QtWidgets.QPushButton(self.tabTextAspectResult)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("./Interface/БИ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextWhiteIntuit.setIcon(icon13)
        self.pushButtonTextWhiteIntuit.setIconSize(QtCore.QSize(20, 20))
        self.pushButtonTextWhiteIntuit.setObjectName("pushButtonTextWhiteIntuit")
        self.gridLayout_7.addWidget(self.pushButtonTextWhiteIntuit, 8, 2, 1, 1)
        spacerItem15 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_7.addItem(spacerItem15, 0, 2, 1, 1)
        spacerItem16 = QtWidgets.QSpacerItem(31, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem16, 2, 8, 1, 1)
        spacerItem17 = QtWidgets.QSpacerItem(20, 50, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_7.addItem(spacerItem17, 17, 2, 1, 1)
        self.pushButtonTextBlackIntuit = QtWidgets.QPushButton(self.tabTextAspectResult)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("./Interface/ЧИ.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonTextBlackIntuit.setIcon(icon14)
        self.pushButtonTextBlackIntuit.setIconSize(QtCore.QSize(20, 20))
        self.pushButtonTextBlackIntuit.setObjectName("pushButtonTextBlackIntuit")
        self.gridLayout_7.addWidget(self.pushButtonTextBlackIntuit, 6, 2, 1, 1)
        spacerItem18 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_7.addItem(spacerItem18, 5, 2, 1, 1)
        spacerItem19 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem19, 2, 1, 1, 1)
        self.labelTextWhiteEthicCounter = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextWhiteEthicCounter.setObjectName("labelTextWhiteEthicCounter")
        self.gridLayout_7.addWidget(self.labelTextWhiteEthicCounter, 16, 4, 1, 1)
        spacerItem20 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_7.addItem(spacerItem20, 9, 2, 1, 1)
        self.label_34 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_34.setObjectName("label_34")
        self.gridLayout_7.addWidget(self.label_34, 16, 3, 1, 1)
        spacerItem21 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem21, 2, 7, 1, 1)
        self.labelTextBlackSensUnique = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextBlackSensUnique.setObjectName("labelTextBlackSensUnique")
        self.gridLayout_7.addWidget(self.labelTextBlackSensUnique, 2, 6, 1, 1)
        self.label_168 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_168.setObjectName("label_168")
        self.gridLayout_7.addWidget(self.label_168, 4, 5, 1, 1)
        self.label_167 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_167.setObjectName("label_167")
        self.gridLayout_7.addWidget(self.label_167, 6, 5, 1, 1)
        self.label_169 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_169.setObjectName("label_169")
        self.gridLayout_7.addWidget(self.label_169, 8, 5, 1, 1)
        self.label_170 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_170.setObjectName("label_170")
        self.gridLayout_7.addWidget(self.label_170, 10, 5, 1, 1)
        self.label_171 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_171.setObjectName("label_171")
        self.gridLayout_7.addWidget(self.label_171, 12, 5, 1, 1)
        self.label_172 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_172.setObjectName("label_172")
        self.gridLayout_7.addWidget(self.label_172, 14, 5, 1, 1)
        self.label_173 = QtWidgets.QLabel(self.tabTextAspectResult)
        self.label_173.setObjectName("label_173")
        self.gridLayout_7.addWidget(self.label_173, 16, 5, 1, 1)
        self.labelTextWhiteSensUnique = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextWhiteSensUnique.setObjectName("labelTextWhiteSensUnique")
        self.gridLayout_7.addWidget(self.labelTextWhiteSensUnique, 4, 6, 1, 1)
        self.labelTextBlackIntuitUnique = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextBlackIntuitUnique.setObjectName("labelTextBlackIntuitUnique")
        self.gridLayout_7.addWidget(self.labelTextBlackIntuitUnique, 6, 6, 1, 1)
        self.labelTextWhiteIntuitUnique = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextWhiteIntuitUnique.setObjectName("labelTextWhiteIntuitUnique")
        self.gridLayout_7.addWidget(self.labelTextWhiteIntuitUnique, 8, 6, 1, 1)
        self.labelTextBlackLogicUnique = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextBlackLogicUnique.setObjectName("labelTextBlackLogicUnique")
        self.gridLayout_7.addWidget(self.labelTextBlackLogicUnique, 10, 6, 1, 1)
        self.labelTextWhiteLogicUnique = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextWhiteLogicUnique.setObjectName("labelTextWhiteLogicUnique")
        self.gridLayout_7.addWidget(self.labelTextWhiteLogicUnique, 12, 6, 1, 1)
        self.labelTextBlackEthicUnique = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextBlackEthicUnique.setObjectName("labelTextBlackEthicUnique")
        self.gridLayout_7.addWidget(self.labelTextBlackEthicUnique, 14, 6, 1, 1)
        self.labelTextWhiteEthicUnique = QtWidgets.QLabel(self.tabTextAspectResult)
        self.labelTextWhiteEthicUnique.setObjectName("labelTextWhiteEthicUnique")
        self.gridLayout_7.addWidget(self.labelTextWhiteEthicUnique, 16, 6, 1, 1)
        self.line = QtWidgets.QFrame(self.tabTextAspectResult)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_7.addWidget(self.line, 3, 2, 1, 5)
        self.line_2 = QtWidgets.QFrame(self.tabTextAspectResult)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_7.addWidget(self.line_2, 7, 2, 1, 5)
        self.line_3 = QtWidgets.QFrame(self.tabTextAspectResult)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_7.addWidget(self.line_3, 11, 2, 1, 5)
        self.line_4 = QtWidgets.QFrame(self.tabTextAspectResult)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout_7.addWidget(self.line_4, 15, 2, 1, 5)
        self.tabWidgetText.addTab(self.tabTextAspectResult, "")
        self.gridLayout_2.addWidget(self.tabWidgetText, 0, 3, 1, 1)
        self.textEdit = QtWidgets.QTextEdit(self.tabTextDiag)
        self.textEdit.setObjectName("textEdit")
        self.gridLayout_2.addWidget(self.textEdit, 0, 0, 1, 3)
        self.verticalLayout_3.addLayout(self.gridLayout_2)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("./Interface/txt.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabAllDiag.addTab(self.tabTextDiag, icon15, "")
        self.tabVkDiag = QtWidgets.QWidget()
        self.tabVkDiag.setObjectName("tabVkDiag")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.tabVkDiag)
        self.gridLayout_12.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.labelVkErrorPlacement = QtWidgets.QLabel(self.tabVkDiag)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.labelVkErrorPlacement.setFont(font)
        self.labelVkErrorPlacement.setObjectName("labelVkErrorPlacement")
        self.gridLayout_12.addWidget(self.labelVkErrorPlacement, 1, 5, 1, 1)
        self.tabWidgetVk = QtWidgets.QTabWidget(self.tabVkDiag)
        self.tabWidgetVk.setMaximumSize(QtCore.QSize(500, 16777215))
        self.tabWidgetVk.setObjectName("tabWidgetVk")
        self.tabTextReininResult_3 = QtWidgets.QWidget()
        self.tabTextReininResult_3.setObjectName("tabTextReininResult_3")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.tabTextReininResult_3)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.label_81 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_81.setAlignment(QtCore.Qt.AlignCenter)
        self.label_81.setObjectName("label_81")
        self.gridLayout_10.addWidget(self.label_81, 24, 1, 1, 1)
        self.label_82 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_82.setAlignment(QtCore.Qt.AlignCenter)
        self.label_82.setObjectName("label_82")
        self.gridLayout_10.addWidget(self.label_82, 18, 6, 1, 1)
        self.label_83 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_83.setAlignment(QtCore.Qt.AlignCenter)
        self.label_83.setObjectName("label_83")
        self.gridLayout_10.addWidget(self.label_83, 6, 8, 1, 1)
        self.label_84 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_84.setAlignment(QtCore.Qt.AlignCenter)
        self.label_84.setObjectName("label_84")
        self.gridLayout_10.addWidget(self.label_84, 6, 1, 1, 1)
        self.label_85 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_85.setAlignment(QtCore.Qt.AlignCenter)
        self.label_85.setObjectName("label_85")
        self.gridLayout_10.addWidget(self.label_85, 6, 4, 1, 1)
        self.label_86 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_86.setAlignment(QtCore.Qt.AlignCenter)
        self.label_86.setObjectName("label_86")
        self.gridLayout_10.addWidget(self.label_86, 15, 4, 1, 1)
        self.label_87 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_87.setAlignment(QtCore.Qt.AlignCenter)
        self.label_87.setObjectName("label_87")
        self.gridLayout_10.addWidget(self.label_87, 18, 1, 1, 1)
        self.label_88 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_88.setAlignment(QtCore.Qt.AlignCenter)
        self.label_88.setObjectName("label_88")
        self.gridLayout_10.addWidget(self.label_88, 18, 4, 1, 1)
        self.label_89 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_89.setAlignment(QtCore.Qt.AlignCenter)
        self.label_89.setObjectName("label_89")
        self.gridLayout_10.addWidget(self.label_89, 15, 1, 1, 1)
        self.label_90 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_90.setAlignment(QtCore.Qt.AlignCenter)
        self.label_90.setObjectName("label_90")
        self.gridLayout_10.addWidget(self.label_90, 18, 8, 1, 1)
        self.label_91 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_91.setAlignment(QtCore.Qt.AlignCenter)
        self.label_91.setObjectName("label_91")
        self.gridLayout_10.addWidget(self.label_91, 15, 8, 1, 1)
        self.label_92 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_92.setAlignment(QtCore.Qt.AlignCenter)
        self.label_92.setObjectName("label_92")
        self.gridLayout_10.addWidget(self.label_92, 21, 1, 1, 1)
        self.label_93 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_93.setAlignment(QtCore.Qt.AlignCenter)
        self.label_93.setObjectName("label_93")
        self.gridLayout_10.addWidget(self.label_93, 15, 6, 1, 1)
        self.label_47 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_47.setMaximumSize(QtCore.QSize(40, 20))
        self.label_47.setText("")
        self.label_47.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_47.setScaledContents(True)
        self.label_47.setObjectName("label_47")
        self.gridLayout_10.addWidget(self.label_47, 21, 3, 1, 1)
        self.label_48 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_48.setMaximumSize(QtCore.QSize(40, 20))
        self.label_48.setText("")
        self.label_48.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_48.setScaledContents(True)
        self.label_48.setObjectName("label_48")
        self.gridLayout_10.addWidget(self.label_48, 18, 3, 1, 1)
        spacerItem22 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_10.addItem(spacerItem22, 11, 3, 1, 1)
        self.label_49 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_49.setMaximumSize(QtCore.QSize(40, 20))
        self.label_49.setText("")
        self.label_49.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_49.setScaledContents(True)
        self.label_49.setObjectName("label_49")
        self.gridLayout_10.addWidget(self.label_49, 12, 7, 1, 1)
        self.horizontalSliderVkLogicEthic = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkLogicEthic.setMinimum(-3)
        self.horizontalSliderVkLogicEthic.setMaximum(3)
        self.horizontalSliderVkLogicEthic.setPageStep(1)
        self.horizontalSliderVkLogicEthic.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkLogicEthic.setObjectName("horizontalSliderVkLogicEthic")
        self.gridLayout_10.addWidget(self.horizontalSliderVkLogicEthic, 4, 6, 1, 3)
        self.label_50 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_50.setMaximumSize(QtCore.QSize(40, 20))
        self.label_50.setText("")
        self.label_50.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_50.setScaledContents(True)
        self.label_50.setObjectName("label_50")
        self.gridLayout_10.addWidget(self.label_50, 12, 3, 1, 1)
        spacerItem23 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_10.addItem(spacerItem23, 20, 3, 1, 1)
        self.horizontalSliderVkUstupUpryam = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkUstupUpryam.setMinimum(-3)
        self.horizontalSliderVkUstupUpryam.setMaximum(3)
        self.horizontalSliderVkUstupUpryam.setPageStep(1)
        self.horizontalSliderVkUstupUpryam.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkUstupUpryam.setObjectName("horizontalSliderVkUstupUpryam")
        self.gridLayout_10.addWidget(self.horizontalSliderVkUstupUpryam, 10, 6, 1, 3)
        self.labelTextSensInt_3 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.labelTextSensInt_3.setMaximumSize(QtCore.QSize(40, 20))
        self.labelTextSensInt_3.setText("")
        self.labelTextSensInt_3.setTextFormat(QtCore.Qt.AutoText)
        self.labelTextSensInt_3.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.labelTextSensInt_3.setScaledContents(True)
        self.labelTextSensInt_3.setAlignment(QtCore.Qt.AlignCenter)
        self.labelTextSensInt_3.setObjectName("labelTextSensInt_3")
        self.gridLayout_10.addWidget(self.labelTextSensInt_3, 2, 3, 1, 1)
        self.label_51 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_51.setMaximumSize(QtCore.QSize(40, 20))
        self.label_51.setText("")
        self.label_51.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_51.setScaledContents(True)
        self.label_51.setObjectName("label_51")
        self.gridLayout_10.addWidget(self.label_51, 21, 7, 1, 1)
        self.horizontalSliderVkSubjectObject = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkSubjectObject.setMinimum(-3)
        self.horizontalSliderVkSubjectObject.setMaximum(3)
        self.horizontalSliderVkSubjectObject.setPageStep(1)
        self.horizontalSliderVkSubjectObject.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkSubjectObject.setObjectName("horizontalSliderVkSubjectObject")
        self.gridLayout_10.addWidget(self.horizontalSliderVkSubjectObject, 22, 1, 1, 4)
        self.horizontalSliderVkReshitRassud = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkReshitRassud.setMinimum(-3)
        self.horizontalSliderVkReshitRassud.setMaximum(3)
        self.horizontalSliderVkReshitRassud.setPageStep(1)
        self.horizontalSliderVkReshitRassud.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkReshitRassud.setObjectName("horizontalSliderVkReshitRassud")
        self.gridLayout_10.addWidget(self.horizontalSliderVkReshitRassud, 22, 6, 1, 3)
        self.label_52 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_52.setMaximumSize(QtCore.QSize(40, 20))
        self.label_52.setText("")
        self.label_52.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_52.setScaledContents(True)
        self.label_52.setObjectName("label_52")
        self.gridLayout_10.addWidget(self.label_52, 9, 3, 1, 1)
        self.label_53 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_53.setMaximumSize(QtCore.QSize(40, 20))
        self.label_53.setText("")
        self.label_53.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_53.setScaledContents(True)
        self.label_53.setObjectName("label_53")
        self.gridLayout_10.addWidget(self.label_53, 9, 7, 1, 1)
        self.horizontalSliderVkStaticDynamics = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkStaticDynamics.setMinimum(-3)
        self.horizontalSliderVkStaticDynamics.setMaximum(3)
        self.horizontalSliderVkStaticDynamics.setPageStep(1)
        self.horizontalSliderVkStaticDynamics.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkStaticDynamics.setObjectName("horizontalSliderVkStaticDynamics")
        self.gridLayout_10.addWidget(self.horizontalSliderVkStaticDynamics, 16, 6, 1, 3)
        spacerItem24 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem24, 2, 0, 1, 1)
        self.horizontalSliderVkPositivNegativ = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkPositivNegativ.setMinimum(-3)
        self.horizontalSliderVkPositivNegativ.setMaximum(3)
        self.horizontalSliderVkPositivNegativ.setPageStep(1)
        self.horizontalSliderVkPositivNegativ.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkPositivNegativ.setObjectName("horizontalSliderVkPositivNegativ")
        self.gridLayout_10.addWidget(self.horizontalSliderVkPositivNegativ, 19, 1, 1, 4)
        self.label_94 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_94.setAlignment(QtCore.Qt.AlignCenter)
        self.label_94.setObjectName("label_94")
        self.gridLayout_10.addWidget(self.label_94, 21, 6, 1, 1)
        self.horizontalSliderVkConstructEmotiv = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkConstructEmotiv.setMinimum(-3)
        self.horizontalSliderVkConstructEmotiv.setMaximum(3)
        self.horizontalSliderVkConstructEmotiv.setPageStep(1)
        self.horizontalSliderVkConstructEmotiv.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkConstructEmotiv.setObjectName("horizontalSliderVkConstructEmotiv")
        self.gridLayout_10.addWidget(self.horizontalSliderVkConstructEmotiv, 13, 6, 1, 3)
        self.horizontalSliderVkBespechPredusmotr = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkBespechPredusmotr.setMinimum(-3)
        self.horizontalSliderVkBespechPredusmotr.setMaximum(3)
        self.horizontalSliderVkBespechPredusmotr.setPageStep(1)
        self.horizontalSliderVkBespechPredusmotr.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkBespechPredusmotr.setObjectName("horizontalSliderVkBespechPredusmotr")
        self.gridLayout_10.addWidget(self.horizontalSliderVkBespechPredusmotr, 13, 1, 1, 4)
        self.horizontalSliderVkQuestimDeklatim = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkQuestimDeklatim.setMinimum(-3)
        self.horizontalSliderVkQuestimDeklatim.setMaximum(3)
        self.horizontalSliderVkQuestimDeklatim.setPageStep(1)
        self.horizontalSliderVkQuestimDeklatim.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkQuestimDeklatim.setObjectName("horizontalSliderVkQuestimDeklatim")
        self.gridLayout_10.addWidget(self.horizontalSliderVkQuestimDeklatim, 25, 1, 1, 4)
        spacerItem25 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_10.addItem(spacerItem25, 8, 3, 1, 1)
        spacerItem26 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_10.addItem(spacerItem26, 17, 3, 1, 1)
        spacerItem27 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_10.addItem(spacerItem27, 0, 0, 1, 1)
        spacerItem28 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_10.addItem(spacerItem28, 26, 1, 1, 1)
        spacerItem29 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_10.addItem(spacerItem29, 14, 3, 1, 1)
        spacerItem30 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem30, 2, 9, 1, 1)
        self.label_95 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_95.setMaximumSize(QtCore.QSize(40, 20))
        self.label_95.setText("")
        self.label_95.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_95.setScaledContents(True)
        self.label_95.setObjectName("label_95")
        self.gridLayout_10.addWidget(self.label_95, 24, 3, 1, 1)
        spacerItem31 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem31, 2, 5, 1, 1)
        self.horizontalSliderVkStrategyTactics = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkStrategyTactics.setMinimum(-3)
        self.horizontalSliderVkStrategyTactics.setMaximum(3)
        self.horizontalSliderVkStrategyTactics.setPageStep(1)
        self.horizontalSliderVkStrategyTactics.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkStrategyTactics.setObjectName("horizontalSliderVkStrategyTactics")
        self.gridLayout_10.addWidget(self.horizontalSliderVkStrategyTactics, 16, 1, 1, 4)
        self.horizontalSliderVkExtraIntro = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkExtraIntro.setMinimum(-3)
        self.horizontalSliderVkExtraIntro.setMaximum(3)
        self.horizontalSliderVkExtraIntro.setPageStep(1)
        self.horizontalSliderVkExtraIntro.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkExtraIntro.setObjectName("horizontalSliderVkExtraIntro")
        self.gridLayout_10.addWidget(self.horizontalSliderVkExtraIntro, 7, 1, 1, 4)
        self.label_96 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_96.setMaximumSize(QtCore.QSize(40, 20))
        self.label_96.setText("")
        self.label_96.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_96.setScaledContents(True)
        self.label_96.setAlignment(QtCore.Qt.AlignCenter)
        self.label_96.setObjectName("label_96")
        self.gridLayout_10.addWidget(self.label_96, 2, 7, 1, 1)
        self.label_97 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_97.setMaximumSize(QtCore.QSize(40, 20))
        self.label_97.setText("")
        self.label_97.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_97.setScaledContents(True)
        self.label_97.setObjectName("label_97")
        self.gridLayout_10.addWidget(self.label_97, 6, 7, 1, 1)
        self.horizontalSliderVkRatioIrratio = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkRatioIrratio.setMinimum(-3)
        self.horizontalSliderVkRatioIrratio.setMaximum(3)
        self.horizontalSliderVkRatioIrratio.setPageStep(1)
        self.horizontalSliderVkRatioIrratio.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkRatioIrratio.setObjectName("horizontalSliderVkRatioIrratio")
        self.gridLayout_10.addWidget(self.horizontalSliderVkRatioIrratio, 7, 6, 1, 3)
        spacerItem32 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_10.addItem(spacerItem32, 23, 3, 1, 1)
        self.label_98 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_98.setMaximumSize(QtCore.QSize(40, 20))
        self.label_98.setText("")
        self.label_98.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_98.setScaledContents(True)
        self.label_98.setObjectName("label_98")
        self.gridLayout_10.addWidget(self.label_98, 15, 3, 1, 1)
        self.label_99 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_99.setMaximumSize(QtCore.QSize(40, 20))
        self.label_99.setText("")
        self.label_99.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_99.setScaledContents(True)
        self.label_99.setObjectName("label_99")
        self.gridLayout_10.addWidget(self.label_99, 15, 7, 1, 1)
        self.label_100 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_100.setAlignment(QtCore.Qt.AlignCenter)
        self.label_100.setObjectName("label_100")
        self.gridLayout_10.addWidget(self.label_100, 21, 8, 1, 1)
        self.label_101 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_101.setMaximumSize(QtCore.QSize(40, 20))
        self.label_101.setText("")
        self.label_101.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_101.setScaledContents(True)
        self.label_101.setObjectName("label_101")
        self.gridLayout_10.addWidget(self.label_101, 18, 7, 1, 1)
        self.label_102 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_102.setAlignment(QtCore.Qt.AlignCenter)
        self.label_102.setObjectName("label_102")
        self.gridLayout_10.addWidget(self.label_102, 9, 6, 1, 1)
        self.horizontalSliderVkProcessResult = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkProcessResult.setMinimum(-3)
        self.horizontalSliderVkProcessResult.setMaximum(3)
        self.horizontalSliderVkProcessResult.setPageStep(1)
        self.horizontalSliderVkProcessResult.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkProcessResult.setObjectName("horizontalSliderVkProcessResult")
        self.gridLayout_10.addWidget(self.horizontalSliderVkProcessResult, 19, 6, 1, 3)
        self.label_103 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_103.setAlignment(QtCore.Qt.AlignCenter)
        self.label_103.setObjectName("label_103")
        self.gridLayout_10.addWidget(self.label_103, 24, 4, 1, 1)
        self.label_104 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_104.setAlignment(QtCore.Qt.AlignCenter)
        self.label_104.setObjectName("label_104")
        self.gridLayout_10.addWidget(self.label_104, 9, 1, 1, 1)
        self.label_105 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_105.setAlignment(QtCore.Qt.AlignCenter)
        self.label_105.setObjectName("label_105")
        self.gridLayout_10.addWidget(self.label_105, 9, 8, 1, 1)
        self.label_106 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_106.setMaximumSize(QtCore.QSize(40, 20))
        self.label_106.setText("")
        self.label_106.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_106.setScaledContents(True)
        self.label_106.setObjectName("label_106")
        self.gridLayout_10.addWidget(self.label_106, 6, 3, 1, 1)
        spacerItem33 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_10.addItem(spacerItem33, 5, 3, 1, 1)
        self.horizontalSliderVkAristocratDemocrat = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkAristocratDemocrat.setMinimum(-3)
        self.horizontalSliderVkAristocratDemocrat.setMaximum(3)
        self.horizontalSliderVkAristocratDemocrat.setPageStep(1)
        self.horizontalSliderVkAristocratDemocrat.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkAristocratDemocrat.setObjectName("horizontalSliderVkAristocratDemocrat")
        self.gridLayout_10.addWidget(self.horizontalSliderVkAristocratDemocrat, 10, 1, 1, 4)
        self.label_107 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_107.setAlignment(QtCore.Qt.AlignCenter)
        self.label_107.setObjectName("label_107")
        self.gridLayout_10.addWidget(self.label_107, 9, 4, 1, 1)
        self.label_108 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_108.setAlignment(QtCore.Qt.AlignCenter)
        self.label_108.setObjectName("label_108")
        self.gridLayout_10.addWidget(self.label_108, 12, 8, 1, 1)
        self.label_109 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_109.setAlignment(QtCore.Qt.AlignCenter)
        self.label_109.setObjectName("label_109")
        self.gridLayout_10.addWidget(self.label_109, 12, 1, 1, 1)
        self.label_110 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_110.setAlignment(QtCore.Qt.AlignCenter)
        self.label_110.setObjectName("label_110")
        self.gridLayout_10.addWidget(self.label_110, 12, 6, 1, 1)
        self.label_111 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_111.setAlignment(QtCore.Qt.AlignCenter)
        self.label_111.setObjectName("label_111")
        self.gridLayout_10.addWidget(self.label_111, 12, 4, 1, 1)
        self.label_112 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_112.setAlignment(QtCore.Qt.AlignCenter)
        self.label_112.setObjectName("label_112")
        self.gridLayout_10.addWidget(self.label_112, 2, 4, 1, 1)
        self.label_113 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_113.setAlignment(QtCore.Qt.AlignCenter)
        self.label_113.setObjectName("label_113")
        self.gridLayout_10.addWidget(self.label_113, 6, 6, 1, 1)
        self.label_114 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_114.setAlignment(QtCore.Qt.AlignCenter)
        self.label_114.setObjectName("label_114")
        self.gridLayout_10.addWidget(self.label_114, 2, 1, 1, 1)
        self.label_115 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_115.setAlignment(QtCore.Qt.AlignCenter)
        self.label_115.setObjectName("label_115")
        self.gridLayout_10.addWidget(self.label_115, 2, 6, 1, 1)
        self.label_116 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_116.setAlignment(QtCore.Qt.AlignCenter)
        self.label_116.setObjectName("label_116")
        self.gridLayout_10.addWidget(self.label_116, 2, 8, 1, 1)
        self.label_117 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_117.setAlignment(QtCore.Qt.AlignCenter)
        self.label_117.setObjectName("label_117")
        self.gridLayout_10.addWidget(self.label_117, 21, 4, 1, 1)
        self.horizontalSliderVkSensInt = QtWidgets.QSlider(self.tabTextReininResult_3)
        self.horizontalSliderVkSensInt.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.horizontalSliderVkSensInt.setMinimum(-3)
        self.horizontalSliderVkSensInt.setMaximum(3)
        self.horizontalSliderVkSensInt.setSingleStep(1)
        self.horizontalSliderVkSensInt.setPageStep(1)
        self.horizontalSliderVkSensInt.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderVkSensInt.setObjectName("horizontalSliderVkSensInt")
        self.gridLayout_10.addWidget(self.horizontalSliderVkSensInt, 4, 1, 1, 4)
        self.progressBarVk = QtWidgets.QProgressBar(self.tabTextReininResult_3)
        self.progressBarVk.setProperty("value", 0)
        self.progressBarVk.setObjectName("progressBarVk")
        self.gridLayout_10.addWidget(self.progressBarVk, 25, 6, 1, 3)
        self.label_118 = QtWidgets.QLabel(self.tabTextReininResult_3)
        self.label_118.setAlignment(QtCore.Qt.AlignCenter)
        self.label_118.setObjectName("label_118")
        self.gridLayout_10.addWidget(self.label_118, 24, 6, 1, 3)
        self.tabWidgetVk.addTab(self.tabTextReininResult_3, "")
        self.gridLayout_12.addWidget(self.tabWidgetVk, 0, 5, 1, 1)
        self.pushButtonVkSwitchToText = QtWidgets.QPushButton(self.tabVkDiag)
        self.pushButtonVkSwitchToText.setIcon(icon15)
        self.pushButtonVkSwitchToText.setObjectName("pushButtonVkSwitchToText")
        self.gridLayout_12.addWidget(self.pushButtonVkSwitchToText, 1, 3, 1, 1)
        self.lineEditVkInput = QtWidgets.QLineEdit(self.tabVkDiag)
        self.lineEditVkInput.setObjectName("lineEditVkInput")
        self.gridLayout_12.addWidget(self.lineEditVkInput, 1, 1, 1, 1)
        self.pushButtonVkDiag = QtWidgets.QPushButton(self.tabVkDiag)
        self.pushButtonVkDiag.setIcon(icon2)
        self.pushButtonVkDiag.setObjectName("pushButtonVkDiag")
        self.gridLayout_12.addWidget(self.pushButtonVkDiag, 1, 2, 1, 1)
        self.label_54 = QtWidgets.QLabel(self.tabVkDiag)
        self.label_54.setObjectName("label_54")
        self.gridLayout_12.addWidget(self.label_54, 1, 0, 1, 1)
        self.listWidgetVkInfoDisplay = QtWidgets.QListWidget(self.tabVkDiag)
        self.listWidgetVkInfoDisplay.setObjectName("listWidgetVkInfoDisplay")
        self.gridLayout_12.addWidget(self.listWidgetVkInfoDisplay, 0, 0, 1, 5)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("./Interface/vk.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabAllDiag.addTab(self.tabVkDiag, icon16, "")
        self.tabTwitterDiag = QtWidgets.QWidget()
        self.tabTwitterDiag.setObjectName("tabTwitterDiag")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.tabTwitterDiag)
        self.gridLayout_14.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.listWidgetTwitterInfoDisplay = QtWidgets.QListWidget(self.tabTwitterDiag)
        self.listWidgetTwitterInfoDisplay.setObjectName("listWidgetTwitterInfoDisplay")
        self.gridLayout_14.addWidget(self.listWidgetTwitterInfoDisplay, 0, 0, 1, 5)
        self.label_119 = QtWidgets.QLabel(self.tabTwitterDiag)
        self.label_119.setObjectName("label_119")
        self.gridLayout_14.addWidget(self.label_119, 1, 0, 1, 1)
        self.tabWidgetTwitter = QtWidgets.QTabWidget(self.tabTwitterDiag)
        self.tabWidgetTwitter.setMaximumSize(QtCore.QSize(500, 16777215))
        self.tabWidgetTwitter.setObjectName("tabWidgetTwitter")
        self.tabTextReininResult_4 = QtWidgets.QWidget()
        self.tabTextReininResult_4.setObjectName("tabTextReininResult_4")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.tabTextReininResult_4)
        self.gridLayout_13.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.label_120 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_120.setAlignment(QtCore.Qt.AlignCenter)
        self.label_120.setObjectName("label_120")
        self.gridLayout_13.addWidget(self.label_120, 24, 1, 1, 1)
        self.label_121 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_121.setAlignment(QtCore.Qt.AlignCenter)
        self.label_121.setObjectName("label_121")
        self.gridLayout_13.addWidget(self.label_121, 18, 6, 1, 1)
        self.label_122 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_122.setAlignment(QtCore.Qt.AlignCenter)
        self.label_122.setObjectName("label_122")
        self.gridLayout_13.addWidget(self.label_122, 6, 8, 1, 1)
        self.label_123 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_123.setAlignment(QtCore.Qt.AlignCenter)
        self.label_123.setObjectName("label_123")
        self.gridLayout_13.addWidget(self.label_123, 6, 1, 1, 1)
        self.label_124 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_124.setAlignment(QtCore.Qt.AlignCenter)
        self.label_124.setObjectName("label_124")
        self.gridLayout_13.addWidget(self.label_124, 6, 4, 1, 1)
        self.label_125 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_125.setAlignment(QtCore.Qt.AlignCenter)
        self.label_125.setObjectName("label_125")
        self.gridLayout_13.addWidget(self.label_125, 15, 4, 1, 1)
        self.label_126 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_126.setAlignment(QtCore.Qt.AlignCenter)
        self.label_126.setObjectName("label_126")
        self.gridLayout_13.addWidget(self.label_126, 18, 1, 1, 1)
        self.label_127 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_127.setAlignment(QtCore.Qt.AlignCenter)
        self.label_127.setObjectName("label_127")
        self.gridLayout_13.addWidget(self.label_127, 18, 4, 1, 1)
        self.label_128 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_128.setAlignment(QtCore.Qt.AlignCenter)
        self.label_128.setObjectName("label_128")
        self.gridLayout_13.addWidget(self.label_128, 15, 1, 1, 1)
        self.label_129 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_129.setAlignment(QtCore.Qt.AlignCenter)
        self.label_129.setObjectName("label_129")
        self.gridLayout_13.addWidget(self.label_129, 18, 8, 1, 1)
        self.label_130 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_130.setAlignment(QtCore.Qt.AlignCenter)
        self.label_130.setObjectName("label_130")
        self.gridLayout_13.addWidget(self.label_130, 15, 8, 1, 1)
        self.label_131 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_131.setAlignment(QtCore.Qt.AlignCenter)
        self.label_131.setObjectName("label_131")
        self.gridLayout_13.addWidget(self.label_131, 21, 1, 1, 1)
        self.label_132 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_132.setAlignment(QtCore.Qt.AlignCenter)
        self.label_132.setObjectName("label_132")
        self.gridLayout_13.addWidget(self.label_132, 15, 6, 1, 1)
        self.label_133 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_133.setMaximumSize(QtCore.QSize(40, 20))
        self.label_133.setText("")
        self.label_133.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_133.setScaledContents(True)
        self.label_133.setObjectName("label_133")
        self.gridLayout_13.addWidget(self.label_133, 21, 3, 1, 1)
        self.label_134 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_134.setMaximumSize(QtCore.QSize(40, 20))
        self.label_134.setText("")
        self.label_134.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_134.setScaledContents(True)
        self.label_134.setObjectName("label_134")
        self.gridLayout_13.addWidget(self.label_134, 18, 3, 1, 1)
        spacerItem34 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_13.addItem(spacerItem34, 11, 3, 1, 1)
        self.label_135 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_135.setMaximumSize(QtCore.QSize(40, 20))
        self.label_135.setText("")
        self.label_135.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_135.setScaledContents(True)
        self.label_135.setObjectName("label_135")
        self.gridLayout_13.addWidget(self.label_135, 12, 7, 1, 1)
        self.horizontalSliderTwitterLogicEthic = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterLogicEthic.setMinimum(-3)
        self.horizontalSliderTwitterLogicEthic.setMaximum(3)
        self.horizontalSliderTwitterLogicEthic.setPageStep(1)
        self.horizontalSliderTwitterLogicEthic.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterLogicEthic.setObjectName("horizontalSliderTwitterLogicEthic")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterLogicEthic, 4, 6, 1, 3)
        self.label_136 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_136.setMaximumSize(QtCore.QSize(40, 20))
        self.label_136.setText("")
        self.label_136.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_136.setScaledContents(True)
        self.label_136.setObjectName("label_136")
        self.gridLayout_13.addWidget(self.label_136, 12, 3, 1, 1)
        spacerItem35 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_13.addItem(spacerItem35, 20, 3, 1, 1)
        self.horizontalSliderTwitterUstupUpryam = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterUstupUpryam.setMinimum(-3)
        self.horizontalSliderTwitterUstupUpryam.setMaximum(3)
        self.horizontalSliderTwitterUstupUpryam.setPageStep(1)
        self.horizontalSliderTwitterUstupUpryam.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterUstupUpryam.setObjectName("horizontalSliderTwitterUstupUpryam")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterUstupUpryam, 10, 6, 1, 3)
        self.labelTextSensInt_4 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.labelTextSensInt_4.setMaximumSize(QtCore.QSize(40, 20))
        self.labelTextSensInt_4.setText("")
        self.labelTextSensInt_4.setTextFormat(QtCore.Qt.AutoText)
        self.labelTextSensInt_4.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.labelTextSensInt_4.setScaledContents(True)
        self.labelTextSensInt_4.setAlignment(QtCore.Qt.AlignCenter)
        self.labelTextSensInt_4.setObjectName("labelTextSensInt_4")
        self.gridLayout_13.addWidget(self.labelTextSensInt_4, 2, 3, 1, 1)
        self.label_137 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_137.setMaximumSize(QtCore.QSize(40, 20))
        self.label_137.setText("")
        self.label_137.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_137.setScaledContents(True)
        self.label_137.setObjectName("label_137")
        self.gridLayout_13.addWidget(self.label_137, 21, 7, 1, 1)
        self.horizontalSliderTwitterSubjectObject = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterSubjectObject.setMinimum(-3)
        self.horizontalSliderTwitterSubjectObject.setMaximum(3)
        self.horizontalSliderTwitterSubjectObject.setPageStep(1)
        self.horizontalSliderTwitterSubjectObject.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterSubjectObject.setObjectName("horizontalSliderTwitterSubjectObject")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterSubjectObject, 22, 1, 1, 4)
        self.horizontalSliderTwitterReshitRassud = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterReshitRassud.setMinimum(-3)
        self.horizontalSliderTwitterReshitRassud.setMaximum(3)
        self.horizontalSliderTwitterReshitRassud.setPageStep(1)
        self.horizontalSliderTwitterReshitRassud.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterReshitRassud.setObjectName("horizontalSliderTwitterReshitRassud")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterReshitRassud, 22, 6, 1, 3)
        self.label_138 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_138.setMaximumSize(QtCore.QSize(40, 20))
        self.label_138.setText("")
        self.label_138.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_138.setScaledContents(True)
        self.label_138.setObjectName("label_138")
        self.gridLayout_13.addWidget(self.label_138, 9, 3, 1, 1)
        self.label_139 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_139.setMaximumSize(QtCore.QSize(40, 20))
        self.label_139.setText("")
        self.label_139.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_139.setScaledContents(True)
        self.label_139.setObjectName("label_139")
        self.gridLayout_13.addWidget(self.label_139, 9, 7, 1, 1)
        self.horizontalSliderTwitterStaticDynamics = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterStaticDynamics.setMinimum(-3)
        self.horizontalSliderTwitterStaticDynamics.setMaximum(3)
        self.horizontalSliderTwitterStaticDynamics.setPageStep(1)
        self.horizontalSliderTwitterStaticDynamics.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterStaticDynamics.setObjectName("horizontalSliderTwitterStaticDynamics")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterStaticDynamics, 16, 6, 1, 3)
        spacerItem36 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem36, 2, 0, 1, 1)
        self.horizontalSliderTwitterPositivNegativ = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterPositivNegativ.setMinimum(-3)
        self.horizontalSliderTwitterPositivNegativ.setMaximum(3)
        self.horizontalSliderTwitterPositivNegativ.setPageStep(1)
        self.horizontalSliderTwitterPositivNegativ.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterPositivNegativ.setObjectName("horizontalSliderTwitterPositivNegativ")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterPositivNegativ, 19, 1, 1, 4)
        self.label_140 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_140.setAlignment(QtCore.Qt.AlignCenter)
        self.label_140.setObjectName("label_140")
        self.gridLayout_13.addWidget(self.label_140, 21, 6, 1, 1)
        self.horizontalSliderTwitterConstructEmotiv = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterConstructEmotiv.setMinimum(-3)
        self.horizontalSliderTwitterConstructEmotiv.setMaximum(3)
        self.horizontalSliderTwitterConstructEmotiv.setPageStep(1)
        self.horizontalSliderTwitterConstructEmotiv.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterConstructEmotiv.setObjectName("horizontalSliderTwitterConstructEmotiv")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterConstructEmotiv, 13, 6, 1, 3)
        self.horizontalSliderTwitterBespechPredusmotr = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterBespechPredusmotr.setMinimum(-3)
        self.horizontalSliderTwitterBespechPredusmotr.setMaximum(3)
        self.horizontalSliderTwitterBespechPredusmotr.setPageStep(1)
        self.horizontalSliderTwitterBespechPredusmotr.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterBespechPredusmotr.setObjectName("horizontalSliderTwitterBespechPredusmotr")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterBespechPredusmotr, 13, 1, 1, 4)
        self.horizontalSliderTwitterQuestimDeklatim = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterQuestimDeklatim.setMinimum(-3)
        self.horizontalSliderTwitterQuestimDeklatim.setMaximum(3)
        self.horizontalSliderTwitterQuestimDeklatim.setPageStep(1)
        self.horizontalSliderTwitterQuestimDeklatim.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterQuestimDeklatim.setObjectName("horizontalSliderTwitterQuestimDeklatim")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterQuestimDeklatim, 25, 1, 1, 4)
        spacerItem37 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_13.addItem(spacerItem37, 8, 3, 1, 1)
        spacerItem38 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_13.addItem(spacerItem38, 17, 3, 1, 1)
        spacerItem39 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_13.addItem(spacerItem39, 0, 0, 1, 1)
        spacerItem40 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_13.addItem(spacerItem40, 26, 1, 1, 1)
        spacerItem41 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_13.addItem(spacerItem41, 14, 3, 1, 1)
        spacerItem42 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem42, 2, 9, 1, 1)
        self.label_141 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_141.setMaximumSize(QtCore.QSize(40, 20))
        self.label_141.setText("")
        self.label_141.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_141.setScaledContents(True)
        self.label_141.setObjectName("label_141")
        self.gridLayout_13.addWidget(self.label_141, 24, 3, 1, 1)
        spacerItem43 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem43, 2, 5, 1, 1)
        self.horizontalSliderTwitterStrategyTactics = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterStrategyTactics.setMinimum(-3)
        self.horizontalSliderTwitterStrategyTactics.setMaximum(3)
        self.horizontalSliderTwitterStrategyTactics.setPageStep(1)
        self.horizontalSliderTwitterStrategyTactics.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterStrategyTactics.setObjectName("horizontalSliderTwitterStrategyTactics")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterStrategyTactics, 16, 1, 1, 4)
        self.horizontalSliderTwitterExtraIntro = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterExtraIntro.setMinimum(-3)
        self.horizontalSliderTwitterExtraIntro.setMaximum(3)
        self.horizontalSliderTwitterExtraIntro.setPageStep(1)
        self.horizontalSliderTwitterExtraIntro.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterExtraIntro.setObjectName("horizontalSliderTwitterExtraIntro")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterExtraIntro, 7, 1, 1, 4)
        self.label_142 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_142.setMaximumSize(QtCore.QSize(40, 20))
        self.label_142.setText("")
        self.label_142.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_142.setScaledContents(True)
        self.label_142.setAlignment(QtCore.Qt.AlignCenter)
        self.label_142.setObjectName("label_142")
        self.gridLayout_13.addWidget(self.label_142, 2, 7, 1, 1)
        self.label_143 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_143.setMaximumSize(QtCore.QSize(40, 20))
        self.label_143.setText("")
        self.label_143.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_143.setScaledContents(True)
        self.label_143.setObjectName("label_143")
        self.gridLayout_13.addWidget(self.label_143, 6, 7, 1, 1)
        self.horizontalSliderTwitterRatioIrratio = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterRatioIrratio.setMinimum(-3)
        self.horizontalSliderTwitterRatioIrratio.setMaximum(3)
        self.horizontalSliderTwitterRatioIrratio.setPageStep(1)
        self.horizontalSliderTwitterRatioIrratio.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterRatioIrratio.setObjectName("horizontalSliderTwitterRatioIrratio")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterRatioIrratio, 7, 6, 1, 3)
        spacerItem44 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_13.addItem(spacerItem44, 23, 3, 1, 1)
        self.label_144 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_144.setMaximumSize(QtCore.QSize(40, 20))
        self.label_144.setText("")
        self.label_144.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_144.setScaledContents(True)
        self.label_144.setObjectName("label_144")
        self.gridLayout_13.addWidget(self.label_144, 15, 3, 1, 1)
        self.label_145 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_145.setMaximumSize(QtCore.QSize(40, 20))
        self.label_145.setText("")
        self.label_145.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_145.setScaledContents(True)
        self.label_145.setObjectName("label_145")
        self.gridLayout_13.addWidget(self.label_145, 15, 7, 1, 1)
        self.label_146 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_146.setAlignment(QtCore.Qt.AlignCenter)
        self.label_146.setObjectName("label_146")
        self.gridLayout_13.addWidget(self.label_146, 21, 8, 1, 1)
        self.label_147 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_147.setMaximumSize(QtCore.QSize(40, 20))
        self.label_147.setText("")
        self.label_147.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_147.setScaledContents(True)
        self.label_147.setObjectName("label_147")
        self.gridLayout_13.addWidget(self.label_147, 18, 7, 1, 1)
        self.label_148 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_148.setAlignment(QtCore.Qt.AlignCenter)
        self.label_148.setObjectName("label_148")
        self.gridLayout_13.addWidget(self.label_148, 9, 6, 1, 1)
        self.horizontalSliderTwitterProcessResult = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterProcessResult.setMinimum(-3)
        self.horizontalSliderTwitterProcessResult.setMaximum(3)
        self.horizontalSliderTwitterProcessResult.setPageStep(1)
        self.horizontalSliderTwitterProcessResult.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterProcessResult.setObjectName("horizontalSliderTwitterProcessResult")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterProcessResult, 19, 6, 1, 3)
        self.label_149 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_149.setAlignment(QtCore.Qt.AlignCenter)
        self.label_149.setObjectName("label_149")
        self.gridLayout_13.addWidget(self.label_149, 24, 4, 1, 1)
        self.label_150 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_150.setAlignment(QtCore.Qt.AlignCenter)
        self.label_150.setObjectName("label_150")
        self.gridLayout_13.addWidget(self.label_150, 9, 1, 1, 1)
        self.label_151 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_151.setAlignment(QtCore.Qt.AlignCenter)
        self.label_151.setObjectName("label_151")
        self.gridLayout_13.addWidget(self.label_151, 9, 8, 1, 1)
        self.label_152 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_152.setMaximumSize(QtCore.QSize(40, 20))
        self.label_152.setText("")
        self.label_152.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_152.setScaledContents(True)
        self.label_152.setObjectName("label_152")
        self.gridLayout_13.addWidget(self.label_152, 6, 3, 1, 1)
        spacerItem45 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_13.addItem(spacerItem45, 5, 3, 1, 1)
        self.horizontalSliderTwitterAristocratDemocrat = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterAristocratDemocrat.setMinimum(-3)
        self.horizontalSliderTwitterAristocratDemocrat.setMaximum(3)
        self.horizontalSliderTwitterAristocratDemocrat.setPageStep(1)
        self.horizontalSliderTwitterAristocratDemocrat.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterAristocratDemocrat.setObjectName("horizontalSliderTwitterAristocratDemocrat")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterAristocratDemocrat, 10, 1, 1, 4)
        self.label_153 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_153.setAlignment(QtCore.Qt.AlignCenter)
        self.label_153.setObjectName("label_153")
        self.gridLayout_13.addWidget(self.label_153, 9, 4, 1, 1)
        self.label_154 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_154.setAlignment(QtCore.Qt.AlignCenter)
        self.label_154.setObjectName("label_154")
        self.gridLayout_13.addWidget(self.label_154, 12, 8, 1, 1)
        self.label_155 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_155.setAlignment(QtCore.Qt.AlignCenter)
        self.label_155.setObjectName("label_155")
        self.gridLayout_13.addWidget(self.label_155, 12, 1, 1, 1)
        self.label_156 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_156.setAlignment(QtCore.Qt.AlignCenter)
        self.label_156.setObjectName("label_156")
        self.gridLayout_13.addWidget(self.label_156, 12, 6, 1, 1)
        self.label_157 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_157.setAlignment(QtCore.Qt.AlignCenter)
        self.label_157.setObjectName("label_157")
        self.gridLayout_13.addWidget(self.label_157, 12, 4, 1, 1)
        self.label_158 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_158.setAlignment(QtCore.Qt.AlignCenter)
        self.label_158.setObjectName("label_158")
        self.gridLayout_13.addWidget(self.label_158, 2, 4, 1, 1)
        self.label_159 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_159.setAlignment(QtCore.Qt.AlignCenter)
        self.label_159.setObjectName("label_159")
        self.gridLayout_13.addWidget(self.label_159, 6, 6, 1, 1)
        self.label_160 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_160.setAlignment(QtCore.Qt.AlignCenter)
        self.label_160.setObjectName("label_160")
        self.gridLayout_13.addWidget(self.label_160, 2, 1, 1, 1)
        self.label_161 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_161.setAlignment(QtCore.Qt.AlignCenter)
        self.label_161.setObjectName("label_161")
        self.gridLayout_13.addWidget(self.label_161, 2, 6, 1, 1)
        self.label_162 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_162.setAlignment(QtCore.Qt.AlignCenter)
        self.label_162.setObjectName("label_162")
        self.gridLayout_13.addWidget(self.label_162, 2, 8, 1, 1)
        self.label_163 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_163.setAlignment(QtCore.Qt.AlignCenter)
        self.label_163.setObjectName("label_163")
        self.gridLayout_13.addWidget(self.label_163, 21, 4, 1, 1)
        self.horizontalSliderTwitterSensInt = QtWidgets.QSlider(self.tabTextReininResult_4)
        self.horizontalSliderTwitterSensInt.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.horizontalSliderTwitterSensInt.setMinimum(-3)
        self.horizontalSliderTwitterSensInt.setMaximum(3)
        self.horizontalSliderTwitterSensInt.setSingleStep(1)
        self.horizontalSliderTwitterSensInt.setPageStep(1)
        self.horizontalSliderTwitterSensInt.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderTwitterSensInt.setObjectName("horizontalSliderTwitterSensInt")
        self.gridLayout_13.addWidget(self.horizontalSliderTwitterSensInt, 4, 1, 1, 4)
        self.progressBarTwitter = QtWidgets.QProgressBar(self.tabTextReininResult_4)
        self.progressBarTwitter.setProperty("value", 0)
        self.progressBarTwitter.setObjectName("progressBarTwitter")
        self.gridLayout_13.addWidget(self.progressBarTwitter, 25, 6, 1, 3)
        self.label_164 = QtWidgets.QLabel(self.tabTextReininResult_4)
        self.label_164.setAlignment(QtCore.Qt.AlignCenter)
        self.label_164.setObjectName("label_164")
        self.gridLayout_13.addWidget(self.label_164, 24, 6, 1, 3)
        self.tabWidgetTwitter.addTab(self.tabTextReininResult_4, "")
        self.gridLayout_14.addWidget(self.tabWidgetTwitter, 0, 5, 1, 2)
        self.lineEditTwitterInput_2 = QtWidgets.QLineEdit(self.tabTwitterDiag)
        self.lineEditTwitterInput_2.setObjectName("lineEditTwitterInput_2")
        self.gridLayout_14.addWidget(self.lineEditTwitterInput_2, 1, 1, 1, 1)
        self.pushButtonTwitterDiag = QtWidgets.QPushButton(self.tabTwitterDiag)
        self.pushButtonTwitterDiag.setIcon(icon2)
        self.pushButtonTwitterDiag.setObjectName("pushButtonTwitterDiag")
        self.gridLayout_14.addWidget(self.pushButtonTwitterDiag, 1, 2, 1, 1)
        self.pushButtonTwitterSwitchToText = QtWidgets.QPushButton(self.tabTwitterDiag)
        self.pushButtonTwitterSwitchToText.setIcon(icon15)
        self.pushButtonTwitterSwitchToText.setObjectName("pushButtonTwitterSwitchToText")
        self.gridLayout_14.addWidget(self.pushButtonTwitterSwitchToText, 1, 3, 1, 1)
        self.labelTwitterErrorPlacement = QtWidgets.QLabel(self.tabTwitterDiag)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.labelTwitterErrorPlacement.setFont(font)
        self.labelTwitterErrorPlacement.setObjectName("labelTwitterErrorPlacement")
        self.gridLayout_14.addWidget(self.labelTwitterErrorPlacement, 1, 5, 1, 2)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("./Interface/tw.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabAllDiag.addTab(self.tabTwitterDiag, icon17, "")
        self.horizontalLayout_3.addWidget(self.tabAllDiag)
        self.tabMain.addTab(self.tabDiagnostic, icon2, "")
        self.tabEducation = QtWidgets.QWidget()
        self.tabEducation.setObjectName("tabEducation")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.tabEducation)
        self.gridLayout_11.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.tabAllEducate = QtWidgets.QTabWidget(self.tabEducation)
        self.tabAllEducate.setUsesScrollButtons(True)
        self.tabAllEducate.setDocumentMode(False)
        self.tabAllEducate.setTabsClosable(False)
        self.tabAllEducate.setMovable(False)
        self.tabAllEducate.setObjectName("tabAllEducate")
        self.tabEducateDataset = QtWidgets.QWidget()
        self.tabEducateDataset.setObjectName("tabEducateDataset")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tabEducateDataset)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.pushButtonEducateDropAllSettings = QtWidgets.QPushButton(self.tabEducateDataset)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap("./Interface/Update.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonEducateDropAllSettings.setIcon(icon18)
        self.pushButtonEducateDropAllSettings.setObjectName("pushButtonEducateDropAllSettings")
        self.gridLayout_8.addWidget(self.pushButtonEducateDropAllSettings, 1, 1, 1, 1)
        spacerItem46 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem46, 1, 2, 1, 1)
        self.plainEducateEdit = QtWidgets.QPlainTextEdit(self.tabEducateDataset)
        self.plainEducateEdit.setMinimumSize(QtCore.QSize(575, 0))
        self.plainEducateEdit.setPlainText("")
        self.plainEducateEdit.setObjectName("plainEducateEdit")
        self.gridLayout_8.addWidget(self.plainEducateEdit, 0, 0, 1, 3)
        self.pushButtonEducateDownloadInDataset = QtWidgets.QPushButton(self.tabEducateDataset)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap("./Interface/DownArrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonEducateDownloadInDataset.setIcon(icon19)
        self.pushButtonEducateDownloadInDataset.setObjectName("pushButtonEducateDownloadInDataset")
        self.gridLayout_8.addWidget(self.pushButtonEducateDownloadInDataset, 1, 0, 1, 1)
        self.tabWidget_2 = QtWidgets.QTabWidget(self.tabEducateDataset)
        self.tabWidget_2.setMaximumSize(QtCore.QSize(500, 16777215))
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tabTextReininResult_2 = QtWidgets.QWidget()
        self.tabTextReininResult_2.setObjectName("tabTextReininResult_2")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.tabTextReininResult_2)
        self.gridLayout_9.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.label_79 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_79.setAlignment(QtCore.Qt.AlignCenter)
        self.label_79.setObjectName("label_79")
        self.gridLayout_9.addWidget(self.label_79, 24, 1, 1, 1)
        self.label_73 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_73.setAlignment(QtCore.Qt.AlignCenter)
        self.label_73.setObjectName("label_73")
        self.gridLayout_9.addWidget(self.label_73, 18, 6, 1, 1)
        self.label_58 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_58.setAlignment(QtCore.Qt.AlignCenter)
        self.label_58.setObjectName("label_58")
        self.gridLayout_9.addWidget(self.label_58, 6, 8, 1, 1)
        self.label_55 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_55.setAlignment(QtCore.Qt.AlignCenter)
        self.label_55.setObjectName("label_55")
        self.gridLayout_9.addWidget(self.label_55, 6, 1, 1, 1)
        self.label_56 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_56.setAlignment(QtCore.Qt.AlignCenter)
        self.label_56.setObjectName("label_56")
        self.gridLayout_9.addWidget(self.label_56, 6, 4, 1, 1)
        self.label_68 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_68.setAlignment(QtCore.Qt.AlignCenter)
        self.label_68.setObjectName("label_68")
        self.gridLayout_9.addWidget(self.label_68, 15, 4, 1, 1)
        self.label_71 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_71.setAlignment(QtCore.Qt.AlignCenter)
        self.label_71.setObjectName("label_71")
        self.gridLayout_9.addWidget(self.label_71, 18, 1, 1, 1)
        self.label_72 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_72.setAlignment(QtCore.Qt.AlignCenter)
        self.label_72.setObjectName("label_72")
        self.gridLayout_9.addWidget(self.label_72, 18, 4, 1, 1)
        self.label_67 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_67.setAlignment(QtCore.Qt.AlignCenter)
        self.label_67.setObjectName("label_67")
        self.gridLayout_9.addWidget(self.label_67, 15, 1, 1, 1)
        self.label_74 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_74.setAlignment(QtCore.Qt.AlignCenter)
        self.label_74.setObjectName("label_74")
        self.gridLayout_9.addWidget(self.label_74, 18, 8, 1, 1)
        self.label_70 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_70.setAlignment(QtCore.Qt.AlignCenter)
        self.label_70.setObjectName("label_70")
        self.gridLayout_9.addWidget(self.label_70, 15, 8, 1, 1)
        self.label_75 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_75.setAlignment(QtCore.Qt.AlignCenter)
        self.label_75.setObjectName("label_75")
        self.gridLayout_9.addWidget(self.label_75, 21, 1, 1, 1)
        self.label_69 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_69.setAlignment(QtCore.Qt.AlignCenter)
        self.label_69.setObjectName("label_69")
        self.gridLayout_9.addWidget(self.label_69, 15, 6, 1, 1)
        self.label_36 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_36.setMaximumSize(QtCore.QSize(40, 20))
        self.label_36.setText("")
        self.label_36.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_36.setScaledContents(True)
        self.label_36.setObjectName("label_36")
        self.gridLayout_9.addWidget(self.label_36, 21, 3, 1, 1)
        self.label_38 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_38.setMaximumSize(QtCore.QSize(40, 20))
        self.label_38.setText("")
        self.label_38.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_38.setScaledContents(True)
        self.label_38.setObjectName("label_38")
        self.gridLayout_9.addWidget(self.label_38, 18, 3, 1, 1)
        spacerItem47 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem47, 11, 3, 1, 1)
        self.label_39 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_39.setMaximumSize(QtCore.QSize(40, 20))
        self.label_39.setText("")
        self.label_39.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_39.setScaledContents(True)
        self.label_39.setObjectName("label_39")
        self.gridLayout_9.addWidget(self.label_39, 12, 7, 1, 1)
        self.horizontalSliderEducateLogicEthic = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateLogicEthic.setMinimum(-1)
        self.horizontalSliderEducateLogicEthic.setMaximum(1)
        self.horizontalSliderEducateLogicEthic.setPageStep(1)
        self.horizontalSliderEducateLogicEthic.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateLogicEthic.setObjectName("horizontalSliderEducateLogicEthic")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateLogicEthic, 4, 6, 1, 3)
        self.label_37 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_37.setMaximumSize(QtCore.QSize(40, 20))
        self.label_37.setText("")
        self.label_37.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_37.setScaledContents(True)
        self.label_37.setObjectName("label_37")
        self.gridLayout_9.addWidget(self.label_37, 12, 3, 1, 1)
        spacerItem48 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem48, 20, 3, 1, 1)
        self.horizontalSliderEducateUstupUpryam = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateUstupUpryam.setMinimum(-1)
        self.horizontalSliderEducateUstupUpryam.setMaximum(1)
        self.horizontalSliderEducateUstupUpryam.setPageStep(1)
        self.horizontalSliderEducateUstupUpryam.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateUstupUpryam.setObjectName("horizontalSliderEducateUstupUpryam")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateUstupUpryam, 10, 6, 1, 3)
        self.labelTextSensInt_2 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.labelTextSensInt_2.setMaximumSize(QtCore.QSize(40, 20))
        self.labelTextSensInt_2.setText("")
        self.labelTextSensInt_2.setTextFormat(QtCore.Qt.AutoText)
        self.labelTextSensInt_2.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.labelTextSensInt_2.setScaledContents(True)
        self.labelTextSensInt_2.setAlignment(QtCore.Qt.AlignCenter)
        self.labelTextSensInt_2.setObjectName("labelTextSensInt_2")
        self.gridLayout_9.addWidget(self.labelTextSensInt_2, 2, 3, 1, 1)
        self.label_33 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_33.setMaximumSize(QtCore.QSize(40, 20))
        self.label_33.setText("")
        self.label_33.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_33.setScaledContents(True)
        self.label_33.setObjectName("label_33")
        self.gridLayout_9.addWidget(self.label_33, 21, 7, 1, 1)
        self.horizontalSliderEducateSubjectObject = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateSubjectObject.setMinimum(-1)
        self.horizontalSliderEducateSubjectObject.setMaximum(1)
        self.horizontalSliderEducateSubjectObject.setPageStep(1)
        self.horizontalSliderEducateSubjectObject.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateSubjectObject.setObjectName("horizontalSliderEducateSubjectObject")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateSubjectObject, 22, 1, 1, 4)
        self.horizontalSliderEducateReshitRassud = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateReshitRassud.setMinimum(-1)
        self.horizontalSliderEducateReshitRassud.setMaximum(1)
        self.horizontalSliderEducateReshitRassud.setPageStep(1)
        self.horizontalSliderEducateReshitRassud.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateReshitRassud.setObjectName("horizontalSliderEducateReshitRassud")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateReshitRassud, 22, 6, 1, 3)
        self.label_31 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_31.setMaximumSize(QtCore.QSize(40, 20))
        self.label_31.setText("")
        self.label_31.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_31.setScaledContents(True)
        self.label_31.setObjectName("label_31")
        self.gridLayout_9.addWidget(self.label_31, 9, 3, 1, 1)
        self.label_45 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_45.setMaximumSize(QtCore.QSize(40, 20))
        self.label_45.setText("")
        self.label_45.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_45.setScaledContents(True)
        self.label_45.setObjectName("label_45")
        self.gridLayout_9.addWidget(self.label_45, 9, 7, 1, 1)
        self.horizontalSliderEducateStaticDynamics = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateStaticDynamics.setMinimum(-1)
        self.horizontalSliderEducateStaticDynamics.setMaximum(1)
        self.horizontalSliderEducateStaticDynamics.setPageStep(1)
        self.horizontalSliderEducateStaticDynamics.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateStaticDynamics.setObjectName("horizontalSliderEducateStaticDynamics")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateStaticDynamics, 16, 6, 1, 3)
        spacerItem49 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem49, 2, 0, 1, 1)
        self.horizontalSliderEducatePositivNegativ = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducatePositivNegativ.setMinimum(-1)
        self.horizontalSliderEducatePositivNegativ.setMaximum(1)
        self.horizontalSliderEducatePositivNegativ.setPageStep(1)
        self.horizontalSliderEducatePositivNegativ.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducatePositivNegativ.setObjectName("horizontalSliderEducatePositivNegativ")
        self.gridLayout_9.addWidget(self.horizontalSliderEducatePositivNegativ, 19, 1, 1, 4)
        self.label_77 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_77.setAlignment(QtCore.Qt.AlignCenter)
        self.label_77.setObjectName("label_77")
        self.gridLayout_9.addWidget(self.label_77, 21, 6, 1, 1)
        self.label_46 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_46.setAlignment(QtCore.Qt.AlignCenter)
        self.label_46.setObjectName("label_46")
        self.gridLayout_9.addWidget(self.label_46, 24, 6, 1, 2)
        self.horizontalSliderEducateConstructEmotiv = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateConstructEmotiv.setMinimum(-1)
        self.horizontalSliderEducateConstructEmotiv.setMaximum(1)
        self.horizontalSliderEducateConstructEmotiv.setPageStep(1)
        self.horizontalSliderEducateConstructEmotiv.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateConstructEmotiv.setObjectName("horizontalSliderEducateConstructEmotiv")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateConstructEmotiv, 13, 6, 1, 3)
        self.horizontalSliderEducateBespechPredusmotr = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateBespechPredusmotr.setMinimum(-1)
        self.horizontalSliderEducateBespechPredusmotr.setMaximum(1)
        self.horizontalSliderEducateBespechPredusmotr.setPageStep(1)
        self.horizontalSliderEducateBespechPredusmotr.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateBespechPredusmotr.setObjectName("horizontalSliderEducateBespechPredusmotr")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateBespechPredusmotr, 13, 1, 1, 4)
        self.horizontalSliderEducateQuestimDeklatim = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateQuestimDeklatim.setMinimum(-1)
        self.horizontalSliderEducateQuestimDeklatim.setMaximum(1)
        self.horizontalSliderEducateQuestimDeklatim.setPageStep(1)
        self.horizontalSliderEducateQuestimDeklatim.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateQuestimDeklatim.setObjectName("horizontalSliderEducateQuestimDeklatim")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateQuestimDeklatim, 25, 1, 1, 4)
        spacerItem50 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem50, 8, 3, 1, 1)
        spacerItem51 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem51, 17, 3, 1, 1)
        spacerItem52 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem52, 0, 0, 1, 1)
        spacerItem53 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem53, 26, 1, 1, 1)
        spacerItem54 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem54, 14, 3, 1, 1)
        spacerItem55 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem55, 2, 9, 1, 1)
        self.label_44 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_44.setMaximumSize(QtCore.QSize(40, 20))
        self.label_44.setText("")
        self.label_44.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_44.setScaledContents(True)
        self.label_44.setObjectName("label_44")
        self.gridLayout_9.addWidget(self.label_44, 24, 3, 1, 1)
        spacerItem56 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem56, 2, 5, 1, 1)
        self.horizontalSliderEducateStrategyTactics = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateStrategyTactics.setMinimum(-1)
        self.horizontalSliderEducateStrategyTactics.setMaximum(1)
        self.horizontalSliderEducateStrategyTactics.setPageStep(1)
        self.horizontalSliderEducateStrategyTactics.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateStrategyTactics.setObjectName("horizontalSliderEducateStrategyTactics")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateStrategyTactics, 16, 1, 1, 4)
        self.horizontalSliderEducateExtraIntro = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateExtraIntro.setMinimum(-1)
        self.horizontalSliderEducateExtraIntro.setMaximum(1)
        self.horizontalSliderEducateExtraIntro.setPageStep(1)
        self.horizontalSliderEducateExtraIntro.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateExtraIntro.setObjectName("horizontalSliderEducateExtraIntro")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateExtraIntro, 7, 1, 1, 4)
        self.label_40 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_40.setMaximumSize(QtCore.QSize(40, 20))
        self.label_40.setText("")
        self.label_40.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_40.setScaledContents(True)
        self.label_40.setAlignment(QtCore.Qt.AlignCenter)
        self.label_40.setObjectName("label_40")
        self.gridLayout_9.addWidget(self.label_40, 2, 7, 1, 1)
        self.label_43 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_43.setMaximumSize(QtCore.QSize(40, 20))
        self.label_43.setText("")
        self.label_43.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_43.setScaledContents(True)
        self.label_43.setObjectName("label_43")
        self.gridLayout_9.addWidget(self.label_43, 6, 7, 1, 1)
        self.horizontalSliderEducateRatioIrratio = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateRatioIrratio.setMinimum(-1)
        self.horizontalSliderEducateRatioIrratio.setMaximum(1)
        self.horizontalSliderEducateRatioIrratio.setPageStep(1)
        self.horizontalSliderEducateRatioIrratio.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateRatioIrratio.setObjectName("horizontalSliderEducateRatioIrratio")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateRatioIrratio, 7, 6, 1, 3)
        spacerItem57 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem57, 23, 3, 1, 1)
        self.label_21 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_21.setMaximumSize(QtCore.QSize(40, 20))
        self.label_21.setText("")
        self.label_21.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_21.setScaledContents(True)
        self.label_21.setObjectName("label_21")
        self.gridLayout_9.addWidget(self.label_21, 15, 3, 1, 1)
        self.label_23 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_23.setMaximumSize(QtCore.QSize(40, 20))
        self.label_23.setText("")
        self.label_23.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_23.setScaledContents(True)
        self.label_23.setObjectName("label_23")
        self.gridLayout_9.addWidget(self.label_23, 15, 7, 1, 1)
        self.label_78 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_78.setAlignment(QtCore.Qt.AlignCenter)
        self.label_78.setObjectName("label_78")
        self.gridLayout_9.addWidget(self.label_78, 21, 8, 1, 1)
        self.label_28 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_28.setMaximumSize(QtCore.QSize(40, 20))
        self.label_28.setText("")
        self.label_28.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_28.setScaledContents(True)
        self.label_28.setObjectName("label_28")
        self.gridLayout_9.addWidget(self.label_28, 18, 7, 1, 1)
        self.label_61 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_61.setAlignment(QtCore.Qt.AlignCenter)
        self.label_61.setObjectName("label_61")
        self.gridLayout_9.addWidget(self.label_61, 9, 6, 1, 1)
        self.horizontalSliderEducateProcessResult = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateProcessResult.setMinimum(-1)
        self.horizontalSliderEducateProcessResult.setMaximum(1)
        self.horizontalSliderEducateProcessResult.setPageStep(1)
        self.horizontalSliderEducateProcessResult.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateProcessResult.setObjectName("horizontalSliderEducateProcessResult")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateProcessResult, 19, 6, 1, 3)
        self.label_80 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_80.setAlignment(QtCore.Qt.AlignCenter)
        self.label_80.setObjectName("label_80")
        self.gridLayout_9.addWidget(self.label_80, 24, 4, 1, 1)
        self.label_59 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_59.setAlignment(QtCore.Qt.AlignCenter)
        self.label_59.setObjectName("label_59")
        self.gridLayout_9.addWidget(self.label_59, 9, 1, 1, 1)
        self.label_62 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_62.setAlignment(QtCore.Qt.AlignCenter)
        self.label_62.setObjectName("label_62")
        self.gridLayout_9.addWidget(self.label_62, 9, 8, 1, 1)
        self.label_25 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_25.setMaximumSize(QtCore.QSize(40, 20))
        self.label_25.setText("")
        self.label_25.setPixmap(QtGui.QPixmap("./Interface/SliderSeparator.png"))
        self.label_25.setScaledContents(True)
        self.label_25.setObjectName("label_25")
        self.gridLayout_9.addWidget(self.label_25, 6, 3, 1, 1)
        spacerItem58 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem58, 5, 3, 1, 1)
        self.horizontalSliderEducateAristocratDemocrat = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateAristocratDemocrat.setMinimum(-1)
        self.horizontalSliderEducateAristocratDemocrat.setMaximum(1)
        self.horizontalSliderEducateAristocratDemocrat.setPageStep(1)
        self.horizontalSliderEducateAristocratDemocrat.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateAristocratDemocrat.setObjectName("horizontalSliderEducateAristocratDemocrat")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateAristocratDemocrat, 10, 1, 1, 4)
        self.label_60 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_60.setAlignment(QtCore.Qt.AlignCenter)
        self.label_60.setObjectName("label_60")
        self.gridLayout_9.addWidget(self.label_60, 9, 4, 1, 1)
        self.label_66 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_66.setAlignment(QtCore.Qt.AlignCenter)
        self.label_66.setObjectName("label_66")
        self.gridLayout_9.addWidget(self.label_66, 12, 8, 1, 1)
        self.label_63 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_63.setAlignment(QtCore.Qt.AlignCenter)
        self.label_63.setObjectName("label_63")
        self.gridLayout_9.addWidget(self.label_63, 12, 1, 1, 1)
        self.label_65 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_65.setAlignment(QtCore.Qt.AlignCenter)
        self.label_65.setObjectName("label_65")
        self.gridLayout_9.addWidget(self.label_65, 12, 6, 1, 1)
        self.label_64 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_64.setAlignment(QtCore.Qt.AlignCenter)
        self.label_64.setObjectName("label_64")
        self.gridLayout_9.addWidget(self.label_64, 12, 4, 1, 1)
        self.label_41 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_41.setAlignment(QtCore.Qt.AlignCenter)
        self.label_41.setObjectName("label_41")
        self.gridLayout_9.addWidget(self.label_41, 2, 4, 1, 1)
        self.label_57 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_57.setAlignment(QtCore.Qt.AlignCenter)
        self.label_57.setObjectName("label_57")
        self.gridLayout_9.addWidget(self.label_57, 6, 6, 1, 1)
        self.label_42 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_42.setAlignment(QtCore.Qt.AlignCenter)
        self.label_42.setObjectName("label_42")
        self.gridLayout_9.addWidget(self.label_42, 2, 1, 1, 1)
        self.label_35 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_35.setAlignment(QtCore.Qt.AlignCenter)
        self.label_35.setObjectName("label_35")
        self.gridLayout_9.addWidget(self.label_35, 2, 6, 1, 1)
        self.label_29 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_29.setAlignment(QtCore.Qt.AlignCenter)
        self.label_29.setObjectName("label_29")
        self.gridLayout_9.addWidget(self.label_29, 2, 8, 1, 1)
        self.spinBox = QtWidgets.QSpinBox(self.tabTextReininResult_2)
        self.spinBox.setMinimum(1)
        self.spinBox.setMaximum(999999999)
        self.spinBox.setProperty("value", 1)
        self.spinBox.setObjectName("spinBox")
        self.gridLayout_9.addWidget(self.spinBox, 24, 8, 1, 1)
        self.label_76 = QtWidgets.QLabel(self.tabTextReininResult_2)
        self.label_76.setAlignment(QtCore.Qt.AlignCenter)
        self.label_76.setObjectName("label_76")
        self.gridLayout_9.addWidget(self.label_76, 21, 4, 1, 1)
        self.horizontalSliderEducateSensInt = QtWidgets.QSlider(self.tabTextReininResult_2)
        self.horizontalSliderEducateSensInt.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.horizontalSliderEducateSensInt.setMinimum(-1)
        self.horizontalSliderEducateSensInt.setMaximum(1)
        self.horizontalSliderEducateSensInt.setSingleStep(1)
        self.horizontalSliderEducateSensInt.setPageStep(1)
        self.horizontalSliderEducateSensInt.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderEducateSensInt.setObjectName("horizontalSliderEducateSensInt")
        self.gridLayout_9.addWidget(self.horizontalSliderEducateSensInt, 4, 1, 1, 4)
        self.tabWidget_2.addTab(self.tabTextReininResult_2, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.listWidget = QtWidgets.QListWidget(self.tab)
        self.listWidget.setObjectName("listWidget")
        self.verticalLayout_2.addWidget(self.listWidget)
        self.pushButtonChangeDatasetDeleteElement = QtWidgets.QPushButton(self.tab)
        self.pushButtonChangeDatasetDeleteElement.setIcon(icon15)
        self.pushButtonChangeDatasetDeleteElement.setObjectName("pushButtonChangeDatasetDeleteElement")
        self.verticalLayout_2.addWidget(self.pushButtonChangeDatasetDeleteElement)
        self.pushButtonChangeDatasetElement = QtWidgets.QPushButton(self.tab)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap("./Interface/UpArrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButtonChangeDatasetElement.setIcon(icon20)
        self.pushButtonChangeDatasetElement.setObjectName("pushButtonChangeDatasetElement")
        self.verticalLayout_2.addWidget(self.pushButtonChangeDatasetElement)
        self.tabWidget_2.addTab(self.tab, "")
        self.gridLayout_8.addWidget(self.tabWidget_2, 0, 3, 1, 1)
        self.verticalLayout_4.addLayout(self.gridLayout_8)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap("./Interface/Plus.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabAllEducate.addTab(self.tabEducateDataset, icon21, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.tab_2)
        self.gridLayout_15.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.pushButtonVocabularyLoadWhiteIntuit = QtWidgets.QPushButton(self.tab_2)
        self.pushButtonVocabularyLoadWhiteIntuit.setText("")
        self.pushButtonVocabularyLoadWhiteIntuit.setIcon(icon13)
        self.pushButtonVocabularyLoadWhiteIntuit.setIconSize(QtCore.QSize(40, 40))
        self.pushButtonVocabularyLoadWhiteIntuit.setObjectName("pushButtonVocabularyLoadWhiteIntuit")
        self.gridLayout_15.addWidget(self.pushButtonVocabularyLoadWhiteIntuit, 3, 2, 1, 1)
        self.progressBarVocabulary = QtWidgets.QProgressBar(self.tab_2)
        self.progressBarVocabulary.setProperty("value", 0)
        self.progressBarVocabulary.setObjectName("progressBarVocabulary")
        self.gridLayout_15.addWidget(self.progressBarVocabulary, 8, 1, 1, 2)
        spacerItem59 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_15.addItem(spacerItem59, 9, 1, 1, 1)
        self.pushButtonVocabularyLoadBlackEthic = QtWidgets.QPushButton(self.tab_2)
        self.pushButtonVocabularyLoadBlackEthic.setText("")
        self.pushButtonVocabularyLoadBlackEthic.setIcon(icon10)
        self.pushButtonVocabularyLoadBlackEthic.setIconSize(QtCore.QSize(40, 40))
        self.pushButtonVocabularyLoadBlackEthic.setObjectName("pushButtonVocabularyLoadBlackEthic")
        self.gridLayout_15.addWidget(self.pushButtonVocabularyLoadBlackEthic, 5, 1, 1, 1)
        self.pushButtonVocabularyLoadBlackSens = QtWidgets.QPushButton(self.tab_2)
        self.pushButtonVocabularyLoadBlackSens.setText("")
        self.pushButtonVocabularyLoadBlackSens.setIcon(icon8)
        self.pushButtonVocabularyLoadBlackSens.setIconSize(QtCore.QSize(40, 40))
        self.pushButtonVocabularyLoadBlackSens.setObjectName("pushButtonVocabularyLoadBlackSens")
        self.gridLayout_15.addWidget(self.pushButtonVocabularyLoadBlackSens, 2, 1, 1, 1)
        spacerItem60 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_15.addItem(spacerItem60, 0, 1, 1, 1)
        spacerItem61 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_15.addItem(spacerItem61, 6, 1, 1, 1)
        spacerItem62 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_15.addItem(spacerItem62, 13, 1, 1, 1)
        self.pushButtonVocabularyLoadWhiteEthic = QtWidgets.QPushButton(self.tab_2)
        self.pushButtonVocabularyLoadWhiteEthic.setText("")
        self.pushButtonVocabularyLoadWhiteEthic.setIcon(icon9)
        self.pushButtonVocabularyLoadWhiteEthic.setIconSize(QtCore.QSize(40, 40))
        self.pushButtonVocabularyLoadWhiteEthic.setObjectName("pushButtonVocabularyLoadWhiteEthic")
        self.gridLayout_15.addWidget(self.pushButtonVocabularyLoadWhiteEthic, 5, 2, 1, 1)
        self.pushButtonVocabularyLoadWhiteSens = QtWidgets.QPushButton(self.tab_2)
        self.pushButtonVocabularyLoadWhiteSens.setText("")
        self.pushButtonVocabularyLoadWhiteSens.setIcon(icon11)
        self.pushButtonVocabularyLoadWhiteSens.setIconSize(QtCore.QSize(40, 40))
        self.pushButtonVocabularyLoadWhiteSens.setObjectName("pushButtonVocabularyLoadWhiteSens")
        self.gridLayout_15.addWidget(self.pushButtonVocabularyLoadWhiteSens, 2, 2, 1, 1)
        self.pushButtonVocabularyLoadBlackIntuit = QtWidgets.QPushButton(self.tab_2)
        self.pushButtonVocabularyLoadBlackIntuit.setText("")
        self.pushButtonVocabularyLoadBlackIntuit.setIcon(icon14)
        self.pushButtonVocabularyLoadBlackIntuit.setIconSize(QtCore.QSize(40, 40))
        self.pushButtonVocabularyLoadBlackIntuit.setObjectName("pushButtonVocabularyLoadBlackIntuit")
        self.gridLayout_15.addWidget(self.pushButtonVocabularyLoadBlackIntuit, 3, 1, 1, 1)
        self.label_166 = QtWidgets.QLabel(self.tab_2)
        self.label_166.setAlignment(QtCore.Qt.AlignCenter)
        self.label_166.setObjectName("label_166")
        self.gridLayout_15.addWidget(self.label_166, 1, 1, 1, 2)
        self.pushButtonVocabularyLoadWhiteLogic = QtWidgets.QPushButton(self.tab_2)
        self.pushButtonVocabularyLoadWhiteLogic.setText("")
        self.pushButtonVocabularyLoadWhiteLogic.setIcon(icon7)
        self.pushButtonVocabularyLoadWhiteLogic.setIconSize(QtCore.QSize(40, 40))
        self.pushButtonVocabularyLoadWhiteLogic.setObjectName("pushButtonVocabularyLoadWhiteLogic")
        self.gridLayout_15.addWidget(self.pushButtonVocabularyLoadWhiteLogic, 4, 2, 1, 1)
        self.label_175 = QtWidgets.QLabel(self.tab_2)
        self.label_175.setAlignment(QtCore.Qt.AlignCenter)
        self.label_175.setObjectName("label_175")
        self.gridLayout_15.addWidget(self.label_175, 11, 1, 1, 2)
        self.pushButtonVocabularyLoadBlackLogic = QtWidgets.QPushButton(self.tab_2)
        self.pushButtonVocabularyLoadBlackLogic.setText("")
        self.pushButtonVocabularyLoadBlackLogic.setIcon(icon12)
        self.pushButtonVocabularyLoadBlackLogic.setIconSize(QtCore.QSize(40, 40))
        self.pushButtonVocabularyLoadBlackLogic.setObjectName("pushButtonVocabularyLoadBlackLogic")
        self.gridLayout_15.addWidget(self.pushButtonVocabularyLoadBlackLogic, 4, 1, 1, 1)
        self.pushButtonVocabularySaveChanges = QtWidgets.QPushButton(self.tab_2)
        self.pushButtonVocabularySaveChanges.setObjectName("pushButtonVocabularySaveChanges")
        self.gridLayout_15.addWidget(self.pushButtonVocabularySaveChanges, 7, 1, 1, 2)
        self.label_176 = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_176.setFont(font)
        self.label_176.setAlignment(QtCore.Qt.AlignCenter)
        self.label_176.setObjectName("label_176")
        self.gridLayout_15.addWidget(self.label_176, 12, 1, 1, 2)
        self.label_174 = QtWidgets.QLabel(self.tab_2)
        self.label_174.setAlignment(QtCore.Qt.AlignCenter)
        self.label_174.setObjectName("label_174")
        self.gridLayout_15.addWidget(self.label_174, 10, 1, 1, 1)
        self.plainVocabularyEdit = QtWidgets.QPlainTextEdit(self.tab_2)
        self.plainVocabularyEdit.setObjectName("plainVocabularyEdit")
        self.gridLayout_15.addWidget(self.plainVocabularyEdit, 0, 0, 14, 1)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap("./Interface/Abc.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabAllEducate.addTab(self.tab_2, icon22, "")
        self.tabEducateNeuralNet = QtWidgets.QWidget()
        self.tabEducateNeuralNet.setObjectName("tabEducateNeuralNet")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.tabEducateNeuralNet)
        self.gridLayout_16.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.pushButtonNeuralQuick = QtWidgets.QPushButton(self.tabEducateNeuralNet)
        self.pushButtonNeuralQuick.setObjectName("pushButtonNeuralQuick")
        self.gridLayout_16.addWidget(self.pushButtonNeuralQuick, 24, 2, 1, 1)
        spacerItem63 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_16.addItem(spacerItem63, 6, 1, 1, 1)
        spacerItem64 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_16.addItem(spacerItem64, 8, 1, 1, 1)
        self.widget = QtWidgets.QWidget(self.tabEducateNeuralNet)
        self.widget.setObjectName("widget")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_17.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.label_178 = QtWidgets.QLabel(self.widget)
        self.label_178.setMaximumSize(QtCore.QSize(400, 400))
        self.label_178.setText("")
        self.label_178.setPixmap(QtGui.QPixmap("./Interface/Neural.png"))
        self.label_178.setScaledContents(True)
        self.label_178.setAlignment(QtCore.Qt.AlignCenter)
        self.label_178.setObjectName("label_178")
        self.gridLayout_17.addWidget(self.label_178, 0, 0, 1, 1)
        self.gridLayout_16.addWidget(self.widget, 2, 6, 16, 1)
        spacerItem65 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_16.addItem(spacerItem65, 10, 1, 1, 1)
        spacerItem66 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_16.addItem(spacerItem66, 14, 1, 1, 1)
        self.textBrowserNeuralConsole = QtWidgets.QTextBrowser(self.tabEducateNeuralNet)
        self.textBrowserNeuralConsole.setObjectName("textBrowserNeuralConsole")
        self.gridLayout_16.addWidget(self.textBrowserNeuralConsole, 18, 2, 6, 5)
        self.label_184 = QtWidgets.QLabel(self.tabEducateNeuralNet)
        self.label_184.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_184.setObjectName("label_184")
        self.gridLayout_16.addWidget(self.label_184, 20, 1, 1, 1)
        self.label_181 = QtWidgets.QLabel(self.tabEducateNeuralNet)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_181.setFont(font)
        self.label_181.setObjectName("label_181")
        self.gridLayout_16.addWidget(self.label_181, 17, 1, 1, 1)
        self.pushButtonNeuralFull = QtWidgets.QPushButton(self.tabEducateNeuralNet)
        self.pushButtonNeuralFull.setObjectName("pushButtonNeuralFull")
        self.gridLayout_16.addWidget(self.pushButtonNeuralFull, 24, 1, 1, 1)
        self.progressBarNeural = QtWidgets.QProgressBar(self.tabEducateNeuralNet)
        self.progressBarNeural.setProperty("value", 0)
        self.progressBarNeural.setObjectName("progressBarNeural")
        self.gridLayout_16.addWidget(self.progressBarNeural, 24, 5, 1, 2)
        self.label_179 = QtWidgets.QLabel(self.tabEducateNeuralNet)
        self.label_179.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_179.setObjectName("label_179")
        self.gridLayout_16.addWidget(self.label_179, 1, 6, 1, 1)
        self.label_177 = QtWidgets.QLabel(self.tabEducateNeuralNet)
        self.label_177.setObjectName("label_177")
        self.gridLayout_16.addWidget(self.label_177, 16, 2, 1, 1)
        self.checkBoxNeuralFullStemConvert = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralFullStemConvert.setObjectName("checkBoxNeuralFullStemConvert")
        self.gridLayout_16.addWidget(self.checkBoxNeuralFullStemConvert, 21, 1, 1, 1)
        self.checkBoxNeuralProcessResult = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralProcessResult.setObjectName("checkBoxNeuralProcessResult")
        self.gridLayout_16.addWidget(self.checkBoxNeuralProcessResult, 11, 2, 1, 1)
        self.checkBoxNeuralRatioIrratio = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralRatioIrratio.setObjectName("checkBoxNeuralRatioIrratio")
        self.gridLayout_16.addWidget(self.checkBoxNeuralRatioIrratio, 3, 2, 1, 1)
        self.checkBoxNeuralExtraIntro = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralExtraIntro.setObjectName("checkBoxNeuralExtraIntro")
        self.gridLayout_16.addWidget(self.checkBoxNeuralExtraIntro, 3, 1, 1, 1)
        self.checkBoxNeuralTokenizerUp = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralTokenizerUp.setObjectName("checkBoxNeuralTokenizerUp")
        self.gridLayout_16.addWidget(self.checkBoxNeuralTokenizerUp, 22, 1, 1, 1)
        self.checkBoxNeuralSubjectObject = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralSubjectObject.setObjectName("checkBoxNeuralSubjectObject")
        self.gridLayout_16.addWidget(self.checkBoxNeuralSubjectObject, 13, 1, 1, 1)
        self.pushButtonNeuralSpecial = QtWidgets.QPushButton(self.tabEducateNeuralNet)
        self.pushButtonNeuralSpecial.setObjectName("pushButtonNeuralSpecial")
        self.gridLayout_16.addWidget(self.pushButtonNeuralSpecial, 17, 2, 1, 1)
        self.checkBoxNeuralConstructEmot = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralConstructEmot.setObjectName("checkBoxNeuralConstructEmot")
        self.gridLayout_16.addWidget(self.checkBoxNeuralConstructEmot, 7, 2, 1, 1)
        self.checkBoxNeuralLogicEthic = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralLogicEthic.setObjectName("checkBoxNeuralLogicEthic")
        self.gridLayout_16.addWidget(self.checkBoxNeuralLogicEthic, 1, 2, 1, 1)
        spacerItem67 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_16.addItem(spacerItem67, 2, 1, 1, 1)
        self.checkBoxNeuralAristocratDemocrat = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralAristocratDemocrat.setObjectName("checkBoxNeuralAristocratDemocrat")
        self.gridLayout_16.addWidget(self.checkBoxNeuralAristocratDemocrat, 5, 1, 1, 1)
        self.checkBoxNeuralUstupUpryam = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralUstupUpryam.setObjectName("checkBoxNeuralUstupUpryam")
        self.gridLayout_16.addWidget(self.checkBoxNeuralUstupUpryam, 5, 2, 1, 1)
        self.label_180 = QtWidgets.QLabel(self.tabEducateNeuralNet)
        self.label_180.setObjectName("label_180")
        self.gridLayout_16.addWidget(self.label_180, 17, 5, 1, 1)
        self.checkBoxNeuralStrategyTactic = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralStrategyTactic.setObjectName("checkBoxNeuralStrategyTactic")
        self.gridLayout_16.addWidget(self.checkBoxNeuralStrategyTactic, 9, 1, 1, 1)
        self.checkBoxNeuralQuestimDeclatim = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralQuestimDeclatim.setObjectName("checkBoxNeuralQuestimDeclatim")
        self.gridLayout_16.addWidget(self.checkBoxNeuralQuestimDeclatim, 16, 1, 1, 1)
        self.label_183 = QtWidgets.QLabel(self.tabEducateNeuralNet)
        self.label_183.setObjectName("label_183")
        self.gridLayout_16.addWidget(self.label_183, 19, 1, 1, 1)
        self.checkBoxNeuralSensIntuit = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralSensIntuit.setObjectName("checkBoxNeuralSensIntuit")
        self.gridLayout_16.addWidget(self.checkBoxNeuralSensIntuit, 1, 1, 1, 1)
        self.checkBoxNeuralStaticDynamic = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralStaticDynamic.setObjectName("checkBoxNeuralStaticDynamic")
        self.gridLayout_16.addWidget(self.checkBoxNeuralStaticDynamic, 9, 2, 1, 1)
        self.checkBoxNeuralBespechPredusmotr = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralBespechPredusmotr.setObjectName("checkBoxNeuralBespechPredusmotr")
        self.gridLayout_16.addWidget(self.checkBoxNeuralBespechPredusmotr, 7, 1, 1, 1)
        self.checkBoxNeuralPositivNegativ = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralPositivNegativ.setObjectName("checkBoxNeuralPositivNegativ")
        self.gridLayout_16.addWidget(self.checkBoxNeuralPositivNegativ, 11, 1, 1, 1)
        spacerItem68 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_16.addItem(spacerItem68, 4, 1, 1, 1)
        self.checkBoxNeuralReshitRassud = QtWidgets.QCheckBox(self.tabEducateNeuralNet)
        self.checkBoxNeuralReshitRassud.setObjectName("checkBoxNeuralReshitRassud")
        self.gridLayout_16.addWidget(self.checkBoxNeuralReshitRassud, 13, 2, 1, 1)
        spacerItem69 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_16.addItem(spacerItem69, 12, 1, 1, 1)
        spacerItem70 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem70, 1, 5, 1, 1)
        self.label_182 = QtWidgets.QLabel(self.tabEducateNeuralNet)
        self.label_182.setObjectName("label_182")
        self.gridLayout_16.addWidget(self.label_182, 18, 1, 1, 1)
        spacerItem71 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_16.addItem(spacerItem71, 0, 1, 1, 1)
        spacerItem72 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem72, 1, 3, 1, 1)
        spacerItem73 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_16.addItem(spacerItem73, 25, 1, 1, 1)
        spacerItem74 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem74, 1, 4, 1, 1)
        spacerItem75 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem75, 1, 0, 1, 1)
        spacerItem76 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem76, 2, 7, 1, 1)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap("./Interface/Brain.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabAllEducate.addTab(self.tabEducateNeuralNet, icon23, "")
        self.gridLayout_11.addWidget(self.tabAllEducate, 0, 0, 1, 1)
        self.tabMain.addTab(self.tabEducation, icon1, "")
        self.horizontalLayout_4.addWidget(self.tabMain)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1176, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        self.tabMain.setCurrentIndex(0)
        self.tabAllDiag.setCurrentIndex(0)
        self.tabWidgetText.setCurrentIndex(0)
        self.tabWidgetVk.setCurrentIndex(0)
        self.tabWidgetTwitter.setCurrentIndex(0)
        self.tabAllEducate.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)

        self.pushButtonEducateDropAllSettings.clicked.connect(self.EducateDropAllSettings)
        self.pushButtonTextGoToEducate.clicked.connect(self.TextGoToEducate)

        self.pushButtonVkDiag.clicked.connect(self.addVkInfoDisplay)
        self.pushButtonVkSwitchToText.clicked.connect(self.moveToTextVkInfoDisplay)
        self.listWidgetVkInfoDisplay.doubleClicked.connect(self.deleteVkInfoDisplay)

        self.pushButtonTwitterDiag.clicked.connect(self.addTwitterInfoDisplay)
        self.pushButtonTwitterSwitchToText.clicked.connect(self.moveToTextTwitterInfoDisplay)
        self.listWidgetTwitterInfoDisplay.doubleClicked.connect(self.deleteTwitterInfoDisplay)

        self.listWidget.doubleClicked.connect(self.fromDataset)
        self.pushButtonChangeDatasetElement.clicked.connect(self.fromDataset)
        self.pushButtonEducateDownloadInDataset.clicked.connect(self.intoDataset)
        self.pushButtonChangeDatasetDeleteElement.clicked.connect(self.deleteDataset)

        self.pushButtonVocabularyLoadBlackSens.clicked.connect(self.openVocabularyBlackSens)
        self.pushButtonVocabularyLoadWhiteSens.clicked.connect(self.openVocabularyWhiteSens)
        self.pushButtonVocabularyLoadBlackIntuit.clicked.connect(self.openVocabularyBlackInt)
        self.pushButtonVocabularyLoadWhiteIntuit.clicked.connect(self.openVocabularyWhiteInt)
        self.pushButtonVocabularyLoadBlackLogic.clicked.connect(self.openVocabularyBlackLogic)
        self.pushButtonVocabularyLoadWhiteLogic.clicked.connect(self.openVocabularyWhiteLogic)
        self.pushButtonVocabularyLoadBlackEthic.clicked.connect(self.openVocabularyBlackEthic)
        self.pushButtonVocabularyLoadWhiteEthic.clicked.connect(self.openVocabularyWhiteEthic)
        self.pushButtonVocabularySaveChanges.clicked.connect(self.saveVocabularyChanges)

        self.pushButtonNeuralSpecial.clicked.connect(self.NeuralSpecial)
        self.pushButtonNeuralQuick.clicked.connect(self.NeuralQuick)

        self.pushButtonTextDiag.clicked.connect(self.diagtext)

        self.pushButtonTextBlackSens.clicked.connect(self.textBlackSens)
        self.pushButtonTextBlackIntuit.clicked.connect(self.textBlackInt)
        self.pushButtonTextBlackEthic.clicked.connect(self.textBlackEthic)
        self.pushButtonTextBlackLogic.clicked.connect(self.textBlackLogic)
        self.pushButtonTextWhiteSens.clicked.connect(self.textWhiteSens)
        self.pushButtonTextWhiteIntuit.clicked.connect(self.textWhiteInt)
        self.pushButtonTextWhiteEthic.clicked.connect(self.textWhiteEthic)
        self.pushButtonTextWhiteLogic.clicked.connect(self.textWhiteLogic)

        self.showDataset()

        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.tabAllDiag, self.pushButtonTextDiag)
        MainWindow.setTabOrder(self.pushButtonTextDiag, self.pushButtonTextShowSensor)
        MainWindow.setTabOrder(self.pushButtonTextShowSensor, self.pushButtonTextShowIntuit)
        MainWindow.setTabOrder(self.pushButtonTextShowIntuit, self.pushButtonTextShowLogic)
        MainWindow.setTabOrder(self.pushButtonTextShowLogic, self.pushButtonTextShowEthic)
        MainWindow.setTabOrder(self.pushButtonTextShowEthic, self.pushButtonTextShowExtravert)
        MainWindow.setTabOrder(self.pushButtonTextShowExtravert, self.pushButtonTextShowIntrovert)
        MainWindow.setTabOrder(self.pushButtonTextShowIntrovert, self.pushButtonTextShowRatio)
        MainWindow.setTabOrder(self.pushButtonTextShowRatio, self.pushButtonTextShowIrratio)
        MainWindow.setTabOrder(self.pushButtonTextShowIrratio, self.pushButtonTextShowAristocrat)
        MainWindow.setTabOrder(self.pushButtonTextShowAristocrat, self.pushButtonTextShowDemocrat)
        MainWindow.setTabOrder(self.pushButtonTextShowDemocrat, self.pushButtonTextShowUstup)
        MainWindow.setTabOrder(self.pushButtonTextShowUstup, self.pushButtonTextShowUpryam)
        MainWindow.setTabOrder(self.pushButtonTextShowUpryam, self.pushButtonTextShowBespech)
        MainWindow.setTabOrder(self.pushButtonTextShowBespech, self.pushButtonTextShowPredusmotr)
        MainWindow.setTabOrder(self.pushButtonTextShowPredusmotr, self.pushButtonTextShowConstrut)
        MainWindow.setTabOrder(self.pushButtonTextShowConstrut, self.pushButtonTextShowEmotiv)
        MainWindow.setTabOrder(self.pushButtonTextShowEmotiv, self.pushButtonTextShowStrategy)
        MainWindow.setTabOrder(self.pushButtonTextShowStrategy, self.pushButtonTextShowTactics)
        MainWindow.setTabOrder(self.pushButtonTextShowTactics, self.pushButtonTextShowStatic)
        MainWindow.setTabOrder(self.pushButtonTextShowStatic, self.pushButtonTextShowDynamics)
        MainWindow.setTabOrder(self.pushButtonTextShowDynamics, self.pushButtonTextShowPositiv)
        MainWindow.setTabOrder(self.pushButtonTextShowPositiv, self.pushButtonTextShowNegativ)
        MainWindow.setTabOrder(self.pushButtonTextShowNegativ, self.pushButtonTextShowProcess)
        MainWindow.setTabOrder(self.pushButtonTextShowProcess, self.pushButtonTextShowResult)
        MainWindow.setTabOrder(self.pushButtonTextShowResult, self.pushButtonTextShowSubject)
        MainWindow.setTabOrder(self.pushButtonTextShowSubject, self.pushButtonTextShowObject)
        MainWindow.setTabOrder(self.pushButtonTextShowObject, self.pushButtonTextShowReshit)
        MainWindow.setTabOrder(self.pushButtonTextShowReshit, self.pushButtonTextShowRassud)
        MainWindow.setTabOrder(self.pushButtonTextShowRassud, self.pushButtonTextShowQestim)
        MainWindow.setTabOrder(self.pushButtonTextShowQestim, self.pushButtonTextShowDeklatim)
        MainWindow.setTabOrder(self.pushButtonTextShowDeklatim, self.horizontalSliderTextSensInt)
        MainWindow.setTabOrder(self.horizontalSliderTextSensInt, self.horizontalSliderTextLogicEthic)
        MainWindow.setTabOrder(self.horizontalSliderTextLogicEthic, self.horizontalSliderTextExtraIntro)
        MainWindow.setTabOrder(self.horizontalSliderTextExtraIntro, self.horizontalSliderTextRatioIrratio)
        MainWindow.setTabOrder(self.horizontalSliderTextRatioIrratio, self.horizontalSliderTextAristocratDemocrat)
        MainWindow.setTabOrder(self.horizontalSliderTextAristocratDemocrat, self.horizontalSliderTextUstupUpryam)
        MainWindow.setTabOrder(self.horizontalSliderTextUstupUpryam, self.horizontalSliderTextBespechPredusmotr)
        MainWindow.setTabOrder(self.horizontalSliderTextBespechPredusmotr, self.horizontalSliderTextConstructEmotiv)
        MainWindow.setTabOrder(self.horizontalSliderTextConstructEmotiv, self.horizontalSliderTextStrategyTactics)
        MainWindow.setTabOrder(self.horizontalSliderTextStrategyTactics, self.horizontalSliderTextStaticDynamics)
        MainWindow.setTabOrder(self.horizontalSliderTextStaticDynamics, self.horizontalSliderTextPositivNegativ)
        MainWindow.setTabOrder(self.horizontalSliderTextPositivNegativ, self.horizontalSliderTextProcessResult)
        MainWindow.setTabOrder(self.horizontalSliderTextProcessResult, self.horizontalSliderTextSubjectObject)
        MainWindow.setTabOrder(self.horizontalSliderTextSubjectObject, self.horizontalSliderTextReshitRassud)
        MainWindow.setTabOrder(self.horizontalSliderTextReshitRassud, self.horizontalSliderTextQuestimDeklatim)
        MainWindow.setTabOrder(self.horizontalSliderTextQuestimDeklatim, self.tabWidgetText)
        MainWindow.setTabOrder(self.tabWidgetText, self.pushButtonTextBlackSens)
        MainWindow.setTabOrder(self.pushButtonTextBlackSens, self.pushButtonTextWhiteSens)
        MainWindow.setTabOrder(self.pushButtonTextWhiteSens, self.pushButtonTextBlackIntuit)
        MainWindow.setTabOrder(self.pushButtonTextBlackIntuit, self.pushButtonTextWhiteIntuit)
        MainWindow.setTabOrder(self.pushButtonTextWhiteIntuit, self.pushButtonTextBlackLogic)
        MainWindow.setTabOrder(self.pushButtonTextBlackLogic, self.pushButtonTextWhiteLogic)
        MainWindow.setTabOrder(self.pushButtonTextWhiteLogic, self.pushButtonTextBlackEthic)
        MainWindow.setTabOrder(self.pushButtonTextBlackEthic, self.pushButtonTextWhiteEthic)
        MainWindow.setTabOrder(self.pushButtonTextWhiteEthic, self.pushButtonTextGoToEducate)
        MainWindow.setTabOrder(self.pushButtonTextGoToEducate, self.plainEducateEdit)
        MainWindow.setTabOrder(self.plainEducateEdit, self.horizontalSliderEducateSensInt)
        MainWindow.setTabOrder(self.horizontalSliderEducateSensInt, self.horizontalSliderEducateLogicEthic)
        MainWindow.setTabOrder(self.horizontalSliderEducateLogicEthic, self.horizontalSliderEducateExtraIntro)
        MainWindow.setTabOrder(self.horizontalSliderEducateExtraIntro, self.horizontalSliderEducateRatioIrratio)
        MainWindow.setTabOrder(self.horizontalSliderEducateRatioIrratio, self.horizontalSliderEducateAristocratDemocrat)
        MainWindow.setTabOrder(self.horizontalSliderEducateAristocratDemocrat, self.horizontalSliderEducateUstupUpryam)
        MainWindow.setTabOrder(self.horizontalSliderEducateUstupUpryam, self.horizontalSliderEducateBespechPredusmotr)
        MainWindow.setTabOrder(self.horizontalSliderEducateBespechPredusmotr,
                               self.horizontalSliderEducateConstructEmotiv)
        MainWindow.setTabOrder(self.horizontalSliderEducateConstructEmotiv, self.horizontalSliderEducateStrategyTactics)
        MainWindow.setTabOrder(self.horizontalSliderEducateStrategyTactics, self.horizontalSliderEducateStaticDynamics)
        MainWindow.setTabOrder(self.horizontalSliderEducateStaticDynamics, self.horizontalSliderEducatePositivNegativ)
        MainWindow.setTabOrder(self.horizontalSliderEducatePositivNegativ, self.horizontalSliderEducateProcessResult)
        MainWindow.setTabOrder(self.horizontalSliderEducateProcessResult, self.horizontalSliderEducateSubjectObject)
        MainWindow.setTabOrder(self.horizontalSliderEducateSubjectObject, self.horizontalSliderEducateReshitRassud)
        MainWindow.setTabOrder(self.horizontalSliderEducateReshitRassud, self.horizontalSliderEducateQuestimDeklatim)
        MainWindow.setTabOrder(self.horizontalSliderEducateQuestimDeklatim, self.pushButtonEducateDownloadInDataset)
        MainWindow.setTabOrder(self.pushButtonEducateDownloadInDataset, self.pushButtonEducateDropAllSettings)
        MainWindow.setTabOrder(self.pushButtonEducateDropAllSettings, self.pushButtonChangeDatasetDeleteElement)
        MainWindow.setTabOrder(self.pushButtonChangeDatasetDeleteElement, self.pushButtonChangeDatasetElement)
        MainWindow.setTabOrder(self.pushButtonChangeDatasetElement, self.tabWidget_2)
        MainWindow.setTabOrder(self.tabWidget_2, self.spinBox)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Socionics Neural Analyser"))
        self.pushButtonTextGoToEducate.setText(_translate("MainWindow", "Перенести на обучение"))
        self.pushButtonTextDiag.setText(_translate("MainWindow", "Диагностировать"))
        self.pushButtonTextShowReshit.setText(_translate("MainWindow", "Решительн."))
        self.pushButtonTextShowTactics.setText(_translate("MainWindow", "Тактика"))
        self.pushButtonTextShowDynamics.setText(_translate("MainWindow", "Динамика"))
        self.pushButtonTextShowStatic.setText(_translate("MainWindow", "Статика"))
        self.pushButtonTextShowStrategy.setText(_translate("MainWindow", "Стратегия"))
        self.pushButtonTextShowQestim.setText(_translate("MainWindow", "Квестимн."))
        self.pushButtonTextShowPositiv.setText(_translate("MainWindow", "Позитивизм"))
        self.pushButtonTextShowIntrovert.setText(_translate("MainWindow", "Интроверсия"))
        self.pushButtonTextShowRassud.setText(_translate("MainWindow", "Рассудител."))
        self.pushButtonTextShowResult.setText(_translate("MainWindow", "Результат"))
        self.pushButtonTextShowDemocrat.setText(_translate("MainWindow", "Демократ."))
        self.pushButtonTextShowAristocrat.setText(_translate("MainWindow", "Аристократ."))
        self.pushButtonTextShowUstup.setText(_translate("MainWindow", "Уступчив."))
        self.label_9.setText(_translate("MainWindow", "Этика"))
        self.label_8.setText(_translate("MainWindow", "Логика"))
        self.pushButtonTextShowSubject.setText(_translate("MainWindow", "Субъектив."))
        self.pushButtonTextShowProcess.setText(_translate("MainWindow", "Процесс"))
        self.pushButtonTextShowNegativ.setText(_translate("MainWindow", "Негативизм"))
        self.pushButtonTextShowObject.setText(_translate("MainWindow", "Объектив."))
        self.pushButtonTextShowUpryam.setText(_translate("MainWindow", "Упрямость"))
        self.pushButtonTextShowPredusmotr.setText(_translate("MainWindow", "Предусмотр."))
        self.pushButtonTextShowBespech.setText(_translate("MainWindow", "Беспечность"))
        self.pushButtonTextShowDeklatim.setText(_translate("MainWindow", "Деклатимн."))
        self.pushButtonTextShowEmotiv.setText(_translate("MainWindow", "Эмотивизм"))
        self.pushButtonTextShowConstrut.setText(_translate("MainWindow", "Конструкт."))
        self.label_4.setText(_translate("MainWindow", "Интуиция"))
        self.label_3.setText(_translate("MainWindow", "Сенсорика"))
        self.pushButtonTextShowRatio.setText(_translate("MainWindow", "Рационал."))
        self.pushButtonTextShowIrratio.setText(_translate("MainWindow", "Иррационал."))
        self.pushButtonTextShowExtravert.setText(_translate("MainWindow", "Экстраверс"))
        self.label_19.setText(_translate("MainWindow", "Выполнение:"))
        self.tabWidgetText.setTabText(self.tabWidgetText.indexOf(self.tabTextReininResult),
                                      _translate("MainWindow", "Признаки Рейнина"))
        self.label_165.setText(_translate("MainWindow", ", уникальных: "))
        self.label_26.setText(_translate("MainWindow", "Частота вхождения:"))
        self.labelTextWhiteIntuitCounter.setText(_translate("MainWindow", "0"))
        self.labelTextWhiteLogicCounter.setText(_translate("MainWindow", "0"))
        self.label_30.setText(_translate("MainWindow", "Частота вхождения:"))
        self.labelTextBlackLogicCounter.setText(_translate("MainWindow", "0"))
        self.label_32.setText(_translate("MainWindow", "Частота вхождения:"))
        self.label_22.setText(_translate("MainWindow", "Частота вхождения:"))
        self.labelTextBlackEthicCounter.setText(_translate("MainWindow", "0"))
        self.pushButtonTextWhiteLogic.setText(_translate("MainWindow", "Белая Логика"))
        self.pushButtonTextBlackSens.setText(_translate("MainWindow", "Черная Сенсорика"))
        self.pushButtonTextWhiteEthic.setText(_translate("MainWindow", "Белая Этика"))
        self.pushButtonTextBlackEthic.setText(_translate("MainWindow", "Черная Этика"))
        self.label_24.setText(_translate("MainWindow", "Частота вхождения:"))
        self.pushButtonTextWhiteSens.setText(_translate("MainWindow", "Белая Сенсорика"))
        self.label_27.setText(_translate("MainWindow", "Частота вхождения:"))
        self.labelTextBlackIntuitCounter.setText(_translate("MainWindow", "0"))
        self.pushButtonTextBlackLogic.setText(_translate("MainWindow", "Черная Логика"))
        self.labelTextBlackSensCounter.setText(_translate("MainWindow", "0"))
        self.label_20.setText(_translate("MainWindow", "Частота вхождения:"))
        self.labelTextWhiteSensCounter.setText(_translate("MainWindow", "0"))
        self.pushButtonTextWhiteIntuit.setText(_translate("MainWindow", "Белая Интуиция"))
        self.pushButtonTextBlackIntuit.setText(_translate("MainWindow", "Черная Интуиция"))
        self.labelTextWhiteEthicCounter.setText(_translate("MainWindow", "0"))
        self.label_34.setText(_translate("MainWindow", "Частота вхождения:"))
        self.labelTextBlackSensUnique.setText(_translate("MainWindow", "0"))
        self.label_168.setText(_translate("MainWindow", ", уникальных: "))
        self.label_167.setText(_translate("MainWindow", ", уникальных: "))
        self.label_169.setText(_translate("MainWindow", ", уникальных: "))
        self.label_170.setText(_translate("MainWindow", ", уникальных: "))
        self.label_171.setText(_translate("MainWindow", ", уникальных: "))
        self.label_172.setText(_translate("MainWindow", ", уникальных: "))
        self.label_173.setText(_translate("MainWindow", ", уникальных: "))
        self.labelTextWhiteSensUnique.setText(_translate("MainWindow", "0"))
        self.labelTextBlackIntuitUnique.setText(_translate("MainWindow", "0"))
        self.labelTextWhiteIntuitUnique.setText(_translate("MainWindow", "0"))
        self.labelTextBlackLogicUnique.setText(_translate("MainWindow", "0"))
        self.labelTextWhiteLogicUnique.setText(_translate("MainWindow", "0"))
        self.labelTextBlackEthicUnique.setText(_translate("MainWindow", "0"))
        self.labelTextWhiteEthicUnique.setText(_translate("MainWindow", "0"))
        self.tabWidgetText.setTabText(self.tabWidgetText.indexOf(self.tabTextAspectResult),
                                      _translate("MainWindow", "Частотный словарь аспектов"))
        self.tabAllDiag.setTabText(self.tabAllDiag.indexOf(self.tabTextDiag), _translate("MainWindow", "Текст"))
        self.labelVkErrorPlacement.setText(_translate("MainWindow", "Ошибка: Отсутствует"))
        self.label_81.setText(_translate("MainWindow", "Квестимность"))
        self.label_82.setText(_translate("MainWindow", "Процесс"))
        self.label_83.setText(_translate("MainWindow", "Иррациональн."))
        self.label_84.setText(_translate("MainWindow", "Экстраверсия"))
        self.label_85.setText(_translate("MainWindow", "Интроверсия"))
        self.label_86.setText(_translate("MainWindow", "Тактика"))
        self.label_87.setText(_translate("MainWindow", "Позитивизм"))
        self.label_88.setText(_translate("MainWindow", "Негативизм"))
        self.label_89.setText(_translate("MainWindow", "Стратегия"))
        self.label_90.setText(_translate("MainWindow", "Результат"))
        self.label_91.setText(_translate("MainWindow", "Динамика"))
        self.label_92.setText(_translate("MainWindow", "Субъективизм"))
        self.label_93.setText(_translate("MainWindow", "Статика"))
        self.label_94.setText(_translate("MainWindow", "Решительность"))
        self.label_100.setText(_translate("MainWindow", "Рассудительн."))
        self.label_102.setText(_translate("MainWindow", "Уступчивость"))
        self.label_103.setText(_translate("MainWindow", "Деклатимн."))
        self.label_104.setText(_translate("MainWindow", "Аристократия"))
        self.label_105.setText(_translate("MainWindow", "Упрямость"))
        self.label_107.setText(_translate("MainWindow", "Демократия"))
        self.label_108.setText(_translate("MainWindow", "Эмотивизм"))
        self.label_109.setText(_translate("MainWindow", "Беспечность"))
        self.label_110.setText(_translate("MainWindow", "Конструктив."))
        self.label_111.setText(_translate("MainWindow", "Предусмотр."))
        self.label_112.setText(_translate("MainWindow", "Интуиция"))
        self.label_113.setText(_translate("MainWindow", "Рациональн."))
        self.label_114.setText(_translate("MainWindow", "Сенсорика"))
        self.label_115.setText(_translate("MainWindow", "Логика"))
        self.label_116.setText(_translate("MainWindow", "Этика"))
        self.label_117.setText(_translate("MainWindow", "Объективизм"))
        self.label_118.setText(_translate("MainWindow", "Выполнение:"))
        self.tabWidgetVk.setTabText(self.tabWidgetVk.indexOf(self.tabTextReininResult_3),
                                    _translate("MainWindow", "Признаки Рейнина"))
        self.pushButtonVkSwitchToText.setText(_translate("MainWindow", "Рассмотреть"))
        self.pushButtonVkDiag.setText(_translate("MainWindow", "Диагностировать"))
        self.label_54.setText(_translate("MainWindow", "Vkontakte id:"))
        self.tabAllDiag.setTabText(self.tabAllDiag.indexOf(self.tabVkDiag), _translate("MainWindow", "Vkontakte"))
        self.label_119.setText(_translate("MainWindow", "Twitter id (@example):"))
        self.label_120.setText(_translate("MainWindow", "Квестимность"))
        self.label_121.setText(_translate("MainWindow", "Процесс"))
        self.label_122.setText(_translate("MainWindow", "Иррациональн."))
        self.label_123.setText(_translate("MainWindow", "Экстраверсия"))
        self.label_124.setText(_translate("MainWindow", "Интроверсия"))
        self.label_125.setText(_translate("MainWindow", "Тактика"))
        self.label_126.setText(_translate("MainWindow", "Позитивизм"))
        self.label_127.setText(_translate("MainWindow", "Негативизм"))
        self.label_128.setText(_translate("MainWindow", "Стратегия"))
        self.label_129.setText(_translate("MainWindow", "Результат"))
        self.label_130.setText(_translate("MainWindow", "Динамика"))
        self.label_131.setText(_translate("MainWindow", "Субъективизм"))
        self.label_132.setText(_translate("MainWindow", "Статика"))
        self.label_140.setText(_translate("MainWindow", "Решительность"))
        self.label_146.setText(_translate("MainWindow", "Рассудительн."))
        self.label_148.setText(_translate("MainWindow", "Уступчивость"))
        self.label_149.setText(_translate("MainWindow", "Деклатимн."))
        self.label_150.setText(_translate("MainWindow", "Аристократия"))
        self.label_151.setText(_translate("MainWindow", "Упрямость"))
        self.label_153.setText(_translate("MainWindow", "Демократия"))
        self.label_154.setText(_translate("MainWindow", "Эмотивизм"))
        self.label_155.setText(_translate("MainWindow", "Беспечность"))
        self.label_156.setText(_translate("MainWindow", "Конструктив."))
        self.label_157.setText(_translate("MainWindow", "Предусмотр."))
        self.label_158.setText(_translate("MainWindow", "Интуиция"))
        self.label_159.setText(_translate("MainWindow", "Рациональн."))
        self.label_160.setText(_translate("MainWindow", "Сенсорика"))
        self.label_161.setText(_translate("MainWindow", "Логика"))
        self.label_162.setText(_translate("MainWindow", "Этика"))
        self.label_163.setText(_translate("MainWindow", "Объективизм"))
        self.label_164.setText(_translate("MainWindow", "Выполнение:"))
        self.tabWidgetTwitter.setTabText(self.tabWidgetTwitter.indexOf(self.tabTextReininResult_4),
                                         _translate("MainWindow", "Признаки Рейнина"))
        self.pushButtonTwitterDiag.setText(_translate("MainWindow", "Диагностировать"))
        self.pushButtonTwitterSwitchToText.setText(_translate("MainWindow", "Рассмотреть"))
        self.labelTwitterErrorPlacement.setText(_translate("MainWindow", "Ошибка: Отсутствует"))
        self.tabAllDiag.setTabText(self.tabAllDiag.indexOf(self.tabTwitterDiag), _translate("MainWindow", "Twitter"))
        self.tabMain.setTabText(self.tabMain.indexOf(self.tabDiagnostic), _translate("MainWindow", "Диагностика"))
        self.pushButtonEducateDropAllSettings.setText(_translate("MainWindow", "Сбросить назначения"))
        self.pushButtonEducateDownloadInDataset.setText(_translate("MainWindow", "Внести в Датасет"))
        self.label_79.setText(_translate("MainWindow", "Квестимность"))
        self.label_73.setText(_translate("MainWindow", "Процесс"))
        self.label_58.setText(_translate("MainWindow", "Иррациональн."))
        self.label_55.setText(_translate("MainWindow", "Экстраверсия"))
        self.label_56.setText(_translate("MainWindow", "Интроверсия"))
        self.label_68.setText(_translate("MainWindow", "Тактика"))
        self.label_71.setText(_translate("MainWindow", "Позитивизм"))
        self.label_72.setText(_translate("MainWindow", "Негативизм"))
        self.label_67.setText(_translate("MainWindow", "Стратегия"))
        self.label_74.setText(_translate("MainWindow", "Результат"))
        self.label_70.setText(_translate("MainWindow", "Динамика"))
        self.label_75.setText(_translate("MainWindow", "Субъективизм"))
        self.label_69.setText(_translate("MainWindow", "Статика"))
        self.label_77.setText(_translate("MainWindow", "Решительность"))
        self.label_46.setText(_translate("MainWindow", "Сохранить под номером:"))
        self.label_78.setText(_translate("MainWindow", "Рассудительн."))
        self.label_61.setText(_translate("MainWindow", "Уступчивость"))
        self.label_80.setText(_translate("MainWindow", "Деклатимн."))
        self.label_59.setText(_translate("MainWindow", "Аристократия"))
        self.label_62.setText(_translate("MainWindow", "Упрямость"))
        self.label_60.setText(_translate("MainWindow", "Демократия"))
        self.label_66.setText(_translate("MainWindow", "Эмотивизм"))
        self.label_63.setText(_translate("MainWindow", "Беспечность"))
        self.label_65.setText(_translate("MainWindow", "Конструктив."))
        self.label_64.setText(_translate("MainWindow", "Предусмотр."))
        self.label_41.setText(_translate("MainWindow", "Интуиция"))
        self.label_57.setText(_translate("MainWindow", "Рациональн."))
        self.label_42.setText(_translate("MainWindow", "Сенсорика"))
        self.label_35.setText(_translate("MainWindow", "Логика"))
        self.label_29.setText(_translate("MainWindow", "Этика"))
        self.label_76.setText(_translate("MainWindow", "Объективизм"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tabTextReininResult_2),
                                    _translate("MainWindow", "Признаки Рейнина"))
        self.pushButtonChangeDatasetDeleteElement.setText(_translate("MainWindow", "Удалить элемент"))
        self.pushButtonChangeDatasetElement.setText(_translate("MainWindow", "Редактировать элемент"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab), _translate("MainWindow", "Каталог Датасета"))
        self.tabAllEducate.setTabText(self.tabAllEducate.indexOf(self.tabEducateDataset),
                                      _translate("MainWindow", "Новые Данные"))
        self.label_166.setText(_translate("MainWindow", "Загрузить словарь:"))
        self.label_175.setText(_translate("MainWindow", "Все словоформы генерируются"))
        self.pushButtonVocabularySaveChanges.setText(_translate("MainWindow", "Сохранить изменения"))
        self.label_176.setText(_translate("MainWindow", "Автоматически"))
        self.label_174.setText(_translate("MainWindow", "Примечание:"))
        self.tabAllEducate.setTabText(self.tabAllEducate.indexOf(self.tab_2),
                                      _translate("MainWindow", "Словарь аспектов"))
        self.pushButtonNeuralQuick.setText(_translate("MainWindow", "Быстрое обучение"))
        self.label_184.setText(_translate("MainWindow", "выборка на 17% меньше"))
        self.label_181.setText(_translate("MainWindow", "Справочная информация:"))
        self.pushButtonNeuralFull.setText(_translate("MainWindow", "Полное Обучение"))
        self.label_179.setText(_translate("MainWindow", "Автор работы: Acian (vk.com/acian)"))
        self.label_177.setText(_translate("MainWindow", "Для разработки:"))
        self.checkBoxNeuralFullStemConvert.setText(_translate("MainWindow", "Предобработка датасета стеммингом"))
        self.checkBoxNeuralProcessResult.setText(_translate("MainWindow", "Процесс/Результат"))
        self.checkBoxNeuralRatioIrratio.setText(_translate("MainWindow", "Рациональность/Иррациональность"))
        self.checkBoxNeuralExtraIntro.setText(_translate("MainWindow", "Экстраверсия/Интроверсия"))
        self.checkBoxNeuralTokenizerUp.setText(_translate("MainWindow", "Обновление токенайзера"))
        self.checkBoxNeuralSubjectObject.setText(_translate("MainWindow", "Субъективизм/Объективизм"))
        self.pushButtonNeuralSpecial.setText(_translate("MainWindow", "Особое обучение (Выставить галочки)"))
        self.checkBoxNeuralConstructEmot.setText(_translate("MainWindow", "Конструктивизм/Эмотивизм"))
        self.checkBoxNeuralLogicEthic.setText(_translate("MainWindow", "Логика/Этика"))
        self.checkBoxNeuralAristocratDemocrat.setText(_translate("MainWindow", "Аристократия/Демократия"))
        self.checkBoxNeuralUstupUpryam.setText(_translate("MainWindow", "Уступчивость/Упрямость"))
        self.label_180.setText(_translate("MainWindow", "Консоль:"))
        self.checkBoxNeuralStrategyTactic.setText(_translate("MainWindow", "Стратегия/Тактика"))
        self.checkBoxNeuralQuestimDeclatim.setText(_translate("MainWindow", "Квестимность/Дектатимность"))
        self.label_183.setText(_translate("MainWindow", "Быстрое - быстрее в ~1.75раза, но"))
        self.checkBoxNeuralSensIntuit.setText(_translate("MainWindow", "Сенсорика/Интуиция"))
        self.checkBoxNeuralStaticDynamic.setText(_translate("MainWindow", "Статика/Динамика"))
        self.checkBoxNeuralBespechPredusmotr.setText(_translate("MainWindow", "Беспечность/Предусмотрительность"))
        self.checkBoxNeuralPositivNegativ.setText(_translate("MainWindow", "Позитивизм/Негативизм"))
        self.checkBoxNeuralReshitRassud.setText(_translate("MainWindow", "Решительность/Рассудительность"))
        self.label_182.setText(_translate("MainWindow", "Полное - обучение полной выборкой базы"))
        self.tabAllEducate.setTabText(self.tabAllEducate.indexOf(self.tabEducateNeuralNet),
                                      _translate("MainWindow", "Обучение Нейронной сети"))
        self.tabMain.setTabText(self.tabMain.indexOf(self.tabEducation), _translate("MainWindow", "Обучение"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())


